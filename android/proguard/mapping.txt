android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    29:30:void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    221:233:java.lang.String toString() -> toString
    237:238:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    241:331:void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    364:376:void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    389:390:android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    394:418:void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    461:466:android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    470:475:android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    549:571:void bumpBackStackNesting(int) -> a
    574:574:int commit() -> a
    582:596:int commitInternal(boolean) -> a
    600:688:void run() -> run
    691:772:void popFromBackStack(boolean) -> b
    775:775:java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    96:138:android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    142:142:int describeContents() -> describeContents
    146:155:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    160:160:android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    164:164:android.support.v4.app.BackStackState[] newArray(int) -> a
    158:158:java.lang.Object[] newArray(int) -> newArray
    158:158:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    369:369:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    388:409:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    416:426:void restoreViewState(android.os.Bundle) -> a
    429:435:void setIndex(int,android.support.v4.app.Fragment) -> a
    438:438:boolean isInBackStack() -> a
    445:445:boolean equals(java.lang.Object) -> equals
    452:452:int hashCode() -> hashCode
    457:472:java.lang.String toString() -> toString
    563:563:android.support.v4.app.FragmentActivity getActivity() -> b
    570:573:android.content.res.Resources getResources() -> c
    664:664:boolean isDetached() -> d
    724:724:void onHiddenChanged(boolean) -> a
    867:867:void onActivityResult(int,int,android.content.Intent) -> a
    875:875:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    921:922:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    929:930:void onAttach(android.app.Activity) -> a
    936:936:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    954:955:void onCreate(android.os.Bundle) -> c
    978:978:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    992:992:void onViewCreated(android.view.View,android.os.Bundle) -> a
    1018:1019:void onActivityCreated(android.os.Bundle) -> d
    1033:1034:void onViewStateRestored(android.os.Bundle) -> e
    1042:1054:void onStart() -> e
    1063:1064:void onResume() -> f
    1086:1086:void onSaveInstanceState(android.os.Bundle) -> f
    1089:1090:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1098:1099:void onPause() -> g
    1107:1108:void onStop() -> h
    1111:1112:void onLowMemory() -> onLowMemory
    1124:1125:void onDestroyView() -> i
    1132:1142:void onDestroy() -> j
    1151:1171:void initState() -> k
    1178:1179:void onDetach() -> l
    1195:1195:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    1212:1212:void onPrepareOptionsMenu(android.view.Menu) -> a
    1222:1222:void onDestroyOptionsMenu() -> m
    1243:1243:boolean onOptionsItemSelected(android.view.MenuItem) -> a
    1254:1254:void onOptionsMenuClosed(android.view.Menu) -> b
    1274:1275:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1320:1320:boolean onContextItemSelected(android.view.MenuItem) -> b
    1333:1407:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    1420:1430:void instantiateChildFragmentManager() -> n
    1433:1453:void performCreate(android.os.Bundle) -> g
    1457:1460:android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    1464:1476:void performActivityCreated(android.os.Bundle) -> h
    1479:1495:void performStart() -> o
    1498:1512:void performResume() -> p
    1515:1519:void performConfigurationChanged(android.content.res.Configuration) -> a
    1522:1526:void performLowMemory() -> q
    1538:1548:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    1552:1562:boolean performPrepareOptionsMenu(android.view.Menu) -> c
    1566:1578:boolean performOptionsItemSelected(android.view.MenuItem) -> c
    1582:1592:boolean performContextItemSelected(android.view.MenuItem) -> d
    1596:1604:void performOptionsMenuClosed(android.view.Menu) -> d
    1607:1614:void performSaveInstanceState(android.os.Bundle) -> i
    1617:1626:void performPause() -> r
    1629:1638:void performStop() -> s
    1641:1658:void performReallyStop() -> t
    1661:1673:void performDestroyView() -> u
    1676:1685:void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    1424:1427:android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    314:314:int describeContents() -> describeContents
    319:320:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    325:325:android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    329:329:android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    323:323:java.lang.Object[] newArray(int) -> newArray
    323:323:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    147:167:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    174:177:void onBackPressed() -> onBackPressed
    184:186:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    193:211:void onCreate(android.os.Bundle) -> onCreate
    218:229:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    237:312:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    320:328:void onDestroy() -> onDestroy
    335:344:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    352:354:void onLowMemory() -> onLowMemory
    361:373:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    382:388:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    395:402:void onPause() -> onPause
    416:418:void onNewIntent(android.content.Intent) -> onNewIntent
    431:435:void onResume() -> onResume
    442:446:void onPostResume() -> onPostResume
    455:456:void onResumeFragments() -> a
    463:473:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    483:518:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    526:531:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    539:580:void onStart() -> onStart
    587:593:void onStop() -> onStop
    604:604:java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    623:633:void supportInvalidateOptionsMenu() -> c
    646:670:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    673:735:java.lang.String viewToString(android.view.View) -> a
    739:757:void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    760:766:void doReallyStop(boolean) -> a
    776:788:void onReallyStop() -> d
    798:798:void onAttachFragment(android.support.v4.app.Fragment) -> a
    814:818:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    837:844:void invalidateSupportFragment(java.lang.String) -> a
    863:875:android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.h:
    android.support.v4.app.FragmentActivity this$0 -> a
    84:97:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    104:104:android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.j:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.k:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.l:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.m:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.n:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.o:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    434:451:void throwException(java.lang.RuntimeException) -> a
    456:456:android.support.v4.app.FragmentTransaction beginTransaction() -> a
    461:461:boolean executePendingTransactions() -> b
    475:477:boolean popBackStackImmediate() -> c
    545:550:void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    554:567:android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    585:595:java.lang.String toString() -> toString
    600:709:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    720:730:android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    734:737:android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    742:796:android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    800:809:void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    814:1063:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    1066:1067:void moveToState(android.support.v4.app.Fragment) -> b
    1070:1071:void moveToState(int,boolean) -> a
    1074:1104:void moveToState(int,int,int,boolean) -> a
    1107:1115:void startPendingDeferredFragments() -> d
    1118:1134:void makeActive(android.support.v4.app.Fragment) -> c
    1137:1149:void makeInactive(android.support.v4.app.Fragment) -> d
    1152:1171:void addFragment(android.support.v4.app.Fragment,boolean) -> a
    1174:1188:void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    1191:1207:void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    1210:1226:void showFragment(android.support.v4.app.Fragment,int,int) -> c
    1229:1245:void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    1248:1267:void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    1270:1288:android.support.v4.app.Fragment findFragmentById(int) -> a
    1292:1310:android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    1326:1334:void checkStateLoss() -> t
    1337:1353:void enqueueAction(java.lang.Runnable,boolean) -> a
    1356:1372:int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    1376:1398:void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    1401:1409:void freeBackStackIndex(int) -> b
    1415:1464:boolean execPendingActions() -> e
    1468:1473:void reportBackStackChanged() -> f
    1476:1481:void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    1484:1543:boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    1547:1562:java.util.ArrayList retainNonConfig() -> g
    1566:1579:void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    1582:1611:android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    1617:1727:android.os.Parcelable saveAllState() -> h
    1733:1840:void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    1844:1848:void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    1851:1852:void noteStateNotSaved() -> i
    1855:1857:void dispatchCreate() -> j
    1860:1862:void dispatchActivityCreated() -> k
    1865:1867:void dispatchStart() -> l
    1870:1872:void dispatchResume() -> m
    1875:1876:void dispatchPause() -> n
    1882:1885:void dispatchStop() -> o
    1888:1889:void dispatchReallyStop() -> p
    1892:1893:void dispatchDestroyView() -> q
    1896:1902:void dispatchDestroy() -> r
    1905:1913:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    1916:1924:void dispatchLowMemory() -> s
    1927:1955:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    1959:1970:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    1974:1984:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    1988:1998:boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    2002:2010:void dispatchOptionsMenuClosed(android.view.Menu) -> b
    2013:2025:int reverseTransit(int) -> c
    2037:2049:int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.p:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    429:430:void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.q:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    994:999:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1002:1002:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1005:1005:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    353:353:int describeContents() -> describeContents
    357:360:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.r:
    365:365:android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    369:369:android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    363:363:java.lang.Object[] newArray(int) -> newArray
    363:363:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    89:116:android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    120:120:int describeContents() -> describeContents
    124:134:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.s:
    139:139:android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    143:143:android.support.v4.app.FragmentState[] newArray(int) -> a
    137:137:java.lang.Object[] newArray(int) -> newArray
    137:137:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    140:172:void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    181:181:void setup() -> setup
    219:220:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    246:281:void onAttachedToWindow() -> onAttachedToWindow
    285:287:void onDetachedFromWindow() -> onDetachedFromWindow
    291:294:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    299:302:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    306:315:void onTabChanged(java.lang.String) -> onTabChanged
    318:349:android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.t:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    104:106:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    110:110:java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.u:
    118:118:android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    122:122:android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    116:116:java.lang.Object[] newArray(int) -> newArray
    116:116:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.v:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    61:61:android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    61:61:android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    61:61:java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    61:61:java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    61:61:android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.w:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.x:
    184:184:boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.y:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.z:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    484:485:void updateActivity(android.support.v4.app.FragmentActivity) -> a
    701:716:void doStart() -> b
    719:731:void doStop() -> c
    734:747:void doRetain() -> d
    750:758:void finishRetain() -> e
    761:764:void doReportNextStart() -> f
    767:770:void doReportStart() -> g
    773:785:void doDestroy() -> h
    789:795:java.lang.String toString() -> toString
    800:820:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    824:830:boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.aa:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    235:267:void start() -> a
    270:275:void retain() -> b
    278:300:void finishRetain() -> c
    303:311:void reportStart() -> d
    314:324:void stop() -> e
    327:359:void destroy() -> f
    418:435:void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    439:447:java.lang.String toString() -> toString
    451:474:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ab:
    32:41:android.view.ViewGroup wrap(android.view.View) -> a
    53:54:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    61:62:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ac:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    129:134:void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    142:149:void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    194:198:void startLoading() -> a
    206:206:void onStartLoading() -> b
    242:244:void stopLoading() -> c
    253:253:void onStopLoading() -> d
    290:295:void reset() -> e
    304:304:void onReset() -> f
    341:344:java.lang.String dataToString(java.lang.Object) -> a
    349:354:java.lang.String toString() -> toString
    366:372:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    36:39:android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    51:51:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    56:56:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    36:36:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    40:40:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    44:44:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    24:24:android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    28:43:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    44:45:void close() -> close
    48:49:void flush() -> flush
    52:61:void write(char[],int,int) -> write
    64:68:void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    116:138:void gc() -> c
    197:201:int size() -> a
    210:214:int keyAt(int) -> a
    223:227:java.lang.Object valueAt(int) -> b
    280:289:void clear() -> b
    346:350:int idealByteArraySize(int) -> c
    354:354:int idealIntArraySize(int) -> d
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    318:318:java.lang.Object getBridge() -> a
    336:337:void sendAccessibilityEvent(android.view.View,int) -> a
    358:359:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    379:379:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    399:400:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    419:420:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    438:439:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    462:462:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    480:480:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    500:500:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    122:122:java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    127:127:java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    172:172:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    179:180:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    185:187:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    192:193:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    198:198:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    204:205:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    210:211:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    132:132:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    137:138:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    142:144:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    148:149:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    154:154:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    159:160:void sendAccessibilityEvent(android.view.View,int) -> a
    164:165:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    217:217:java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    275:280:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    286:286:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    223:223:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    228:229:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    233:235:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    239:240:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    245:245:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    250:251:void sendAccessibilityEvent(android.view.View,int) -> a
    255:256:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    260:262:java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    267:267:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    57:57:java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    62:62:java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    68:68:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    75:75:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    81:81:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    87:87:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    92:92:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    98:98:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    104:104:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    109:109:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    115:115:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    42:42:java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    46:46:java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    87:87:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    92:93:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    96:98:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    102:103:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    107:107:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    112:113:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    117:118:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    49:49:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    54:55:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    59:60:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    64:65:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    70:70:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    75:76:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    80:81:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    47:47:java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    99:99:java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    104:104:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    51:51:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    56:57:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    61:62:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    66:67:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    72:72:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    77:78:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    82:83:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    87:87:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    92:92:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.n:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    139:139:boolean hasModifiers(android.view.KeyEvent,int) -> a
    143:143:boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.o:
    49:61:int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    67:73:int normalizeMetaState(int) -> a
    78:83:boolean metaStateHasModifiers(int,int) -> a
    88:88:boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.p:
    103:103:boolean metaStateHasModifiers(int,int) -> a
    108:108:boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.q:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.r:
    30:30:boolean metaStateHasModifiers(int,int) -> a
    34:34:boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.s:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    191:191:int getActionIndex(android.view.MotionEvent) -> a
    201:201:int findPointerIndex(android.view.MotionEvent,int) -> a
    210:210:int getPointerId(android.view.MotionEvent,int) -> b
    219:219:float getX(android.view.MotionEvent,int) -> c
    228:228:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.t:
    43:47:int findPointerIndex(android.view.MotionEvent,int) -> a
    51:55:int getPointerId(android.view.MotionEvent,int) -> b
    59:62:float getX(android.view.MotionEvent,int) -> c
    66:69:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.u:
    83:83:int findPointerIndex(android.view.MotionEvent,int) -> a
    87:87:int getPointerId(android.view.MotionEvent,int) -> b
    91:91:float getX(android.view.MotionEvent,int) -> c
    95:95:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.v:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.w:
    26:26:int findPointerIndex(android.view.MotionEvent,int) -> a
    29:29:int getPointerId(android.view.MotionEvent,int) -> b
    32:32:float getX(android.view.MotionEvent,int) -> c
    35:35:float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.x:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    95:96:void startUpdate(android.view.ViewGroup) -> a
    110:110:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    124:125:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    137:138:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    148:149:void finishUpdate(android.view.ViewGroup) -> b
    159:159:void startUpdate(android.view.View) -> a
    175:175:java.lang.Object instantiateItem(android.view.View,int) -> a
    192:192:void destroyItem(android.view.View,int,java.lang.Object) -> a
    207:207:void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    219:219:void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    239:239:android.os.Parcelable saveState() -> b
    250:250:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    268:268:int getItemPosition(java.lang.Object) -> a
    280:281:void registerDataSetObserver(android.database.DataSetObserver) -> a
    284:285:void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    297:297:java.lang.CharSequence getPageTitle(int) -> a
    308:308:float getPageWidth(int) -> b
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    129:132:void setTabIndicatorColor(int) -> setTabIndicatorColor
    140:141:void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    147:147:int getTabIndicatorColor() -> getTabIndicatorColor
    152:156:void setPadding(int,int,int,int) -> setPadding
    160:164:void setTextSpacing(int) -> setTextSpacing
    168:172:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    176:180:void setBackgroundColor(int) -> setBackgroundColor
    184:188:void setBackgroundResource(int) -> setBackgroundResource
    197:200:void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    210:210:boolean getDrawFullUnderline() -> getDrawFullUnderline
    215:215:int getMinHeight() -> getMinHeight
    220:252:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    257:273:void onDraw(android.graphics.Canvas) -> onDraw
    277:293:void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.y:
    android.support.v4.view.PagerTabStrip this$0 -> a
    106:107:void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.z:
    android.support.v4.view.PagerTabStrip this$0 -> a
    114:115:void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    108:109:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    176:178:void setTextSpacing(int) -> setTextSpacing
    184:184:int getTextSpacing() -> getTextSpacing
    193:197:void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    206:211:void setTextColor(int) -> setTextColor
    224:227:void setTextSize(int,float) -> a
    236:238:void setGravity(int) -> setGravity
    242:257:void onAttachedToWindow() -> onAttachedToWindow
    261:268:void onDetachedFromWindow() -> onDetachedFromWindow
    271:306:void updateText(int,android.support.v4.view.PagerAdapter) -> a
    310:313:void requestLayout() -> requestLayout
    316:330:void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    333:418:void updateTextPositions(int,float,boolean) -> a
    422:451:void onMeasure(int,int) -> onMeasure
    455:459:void onLayout(boolean,int,int,int,int) -> onLayout
    462:467:int getMinHeight() -> getMinHeight
    45:45:float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.aa:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.ab:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    476:481:void onPageScrolled(int,float,int) -> a
    485:492:void onPageSelected(int) -> a
    496:497:void onPageScrollStateChanged(int) -> b
    501:502:void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    506:510:void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.ac:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.ad:
    88:89:void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.ae:
    94:95:void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.af:
    28:29:void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.ag:
    java.util.Locale mLocale -> a
    42:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.ah:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    82:82:float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ai:
    40:40:float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.aj:
    54:54:float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ak:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.al:
    26:26:float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.am:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    347:347:boolean canScrollHorizontally(android.view.View,int) -> a
    371:371:int getOverScrollMode(android.view.View) -> a
    508:509:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    544:545:void postInvalidateOnAnimation(android.view.View) -> b
    576:577:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    609:609:int getImportantForAccessibility(android.view.View) -> c
    625:626:void setImportantForAccessibility(android.view.View,int) -> b
    713:714:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.an:
    141:141:boolean canScrollHorizontally(android.view.View,int) -> a
    147:147:int getOverScrollMode(android.view.View) -> a
    154:154:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    172:173:void postInvalidateOnAnimation(android.view.View) -> b
    178:179:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    184:184:long getFrameTime() -> a
    187:187:int getImportantForAccessibility(android.view.View) -> c
    191:191:void setImportantForAccessibility(android.view.View,int) -> b
    199:199:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ao:
    214:214:int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ap:
    224:224:long getFrameTime() -> a
    227:228:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.aq:
    237:237:boolean canScrollHorizontally(android.view.View,int) -> a
    257:258:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ar:
    272:273:void postInvalidateOnAnimation(android.view.View) -> b
    280:281:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    288:288:int getImportantForAccessibility(android.view.View) -> c
    292:293:void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.as:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.au:
    23:23:int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.av:
    25:25:long getFrameTime() -> a
    29:30:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aw:
    30:30:boolean canScrollHorizontally(android.view.View,int) -> a
    38:39:void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ax:
    36:37:void postInvalidateOnAnimation(android.view.View) -> a
    45:46:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    53:53:int getImportantForAccessibility(android.view.View) -> b
    57:58:void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ay:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    73:73:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.az:
    39:39:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ba:
    49:49:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bb:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.bc:
    26:26:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    int mSeenPositionMin -> N
    int mSeenPositionMax -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    347:371:void initViewPager() -> a
    375:377:void onDetachedFromWindow() -> onDetachedFromWindow
    380:395:void setScrollState(int) -> setScrollState
    403:441:void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    444:452:void removeNonDecorViews() -> g
    460:460:android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    464:465:void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    475:477:void setCurrentItem(int) -> setCurrentItem
    486:488:void setCurrentItem(int,boolean) -> a
    491:491:int getCurrentItem() -> getCurrentItem
    495:496:void setCurrentItemInternal(int,boolean,boolean) -> a
    499:525:void setCurrentItemInternal(int,boolean,boolean,int) -> a
    529:554:void scrollToItem(int,boolean,int,boolean) -> a
    563:564:void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    594:607:void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    611:613:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    623:625:android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    636:636:int getOffscreenPageLimit() -> getOffscreenPageLimit
    657:666:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    677:684:void setPageMargin(int) -> setPageMargin
    692:692:int getPageMargin() -> getPageMargin
    701:705:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    713:714:void setPageMarginDrawable(int) -> setPageMarginDrawable
    718:718:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    723:728:void drawableStateChanged() -> drawableStateChanged
    735:737:float distanceInfluenceForSnapDuration(float) -> a
    758:796:void smoothScrollTo(int,int,int) -> a
    799:808:android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    814:878:void dataSetChanged() -> b
    881:882:void populate() -> c
    885:1058:void populate(int) -> a
    1061:1144:void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    1200:1206:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1211:1227:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1231:1253:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1256:1262:android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    1267:1273:android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    1277:1283:android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    1288:1290:void onAttachedToWindow() -> onAttachedToWindow
    1299:1385:void onMeasure(int,int) -> onMeasure
    1389:1395:void onSizeChanged(int,int,int,int) -> onSizeChanged
    1398:1422:void recomputeScrollPosition(int,int,int,int) -> a
    1426:1530:void onLayout(boolean,int,int,int,int) -> onLayout
    1534:1555:void computeScroll() -> computeScroll
    1558:1582:boolean pageScrolled(int) -> d
    1599:1667:void onPageScrolled(int,float,int) -> a
    1670:1698:void completeScroll(boolean) -> a
    1701:1701:boolean isGutterDrag(float,float) -> a
    1705:1711:void enableLayers(boolean) -> b
    1721:1853:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1858:1972:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1976:2019:boolean performDrag(float) -> b
    2027:2065:android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    2070:2089:int determineTargetPage(int,float,int,int) -> a
    2094:2132:void draw(android.graphics.Canvas) -> draw
    2136:2176:void onDraw(android.graphics.Canvas) -> onDraw
    2307:2319:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    2322:2329:void endDrag() -> i
    2332:2344:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    2358:2377:boolean canScroll(android.view.View,boolean,int,int,int) -> a
    2383:2383:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2395:2417:boolean executeKeyEvent(android.view.KeyEvent) -> a
    2421:2460:boolean arrowScroll(int) -> c
    2464:2486:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    2490:2494:boolean pageLeft() -> d
    2498:2502:boolean pageRight() -> e
    2510:2547:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2557:2566:void addTouchables(java.util.ArrayList) -> addTouchables
    2577:2598:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2608:2620:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2625:2625:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2630:2630:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2635:2635:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    2640:2640:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    84:84:void access$000(android.support.v4.view.ViewPager,int) -> a
    84:84:android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    84:84:int access$300(android.support.v4.view.ViewPager) -> b
    84:84:int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bd:
    111:111:int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    108:108:int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.be:
    117:118:float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bf:
    android.support.v4.view.ViewPager this$0 -> a
    236:238:void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bg:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bh:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bi:
    android.support.v4.view.ViewPager this$0 -> b
    2647:2649:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    2653:2662:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    2666:2683:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bj:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bk:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bl:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bm:
    android.support.v4.view.ViewPager this$0 -> a
    2690:2691:void onChanged() -> onChanged
    2694:2695:void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    1163:1166:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    1170:1170:java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bn:
    1179:1179:android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    1183:1183:android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    1176:1176:java.lang.Object[] newArray(int) -> a
    1176:1176:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bo:
    2753:2758:int compare(android.view.View,android.view.View) -> a
    2750:2750:int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    938:938:java.lang.Object getInfo() -> a
    1145:1146:void addAction(int) -> a
    1617:1618:void setScrollable(boolean) -> a
    1665:1666:void setClassName(java.lang.CharSequence) -> a
    1729:1729:int hashCode() -> hashCode
    1734:1751:boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    417:418:void addAction(java.lang.Object,int) -> a
    562:563:void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    612:613:void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    void addAction(java.lang.Object,int) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.e:
    121:121:void addAction(java.lang.Object,int) -> a
    296:296:void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    356:356:void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.f:
    43:44:void addAction(java.lang.Object,int) -> a
    161:162:void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    201:202:void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.g:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    117:117:java.lang.Object getProvider() -> a
    143:143:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    160:160:boolean performAction(int,int,android.os.Bundle) -> a
    179:179:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.h:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.i:
    47:47:java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.j:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    52:52:boolean performAction(int,int,android.os.Bundle) -> a
    58:66:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    72:77:java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.k:
    39:39:java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.l:
    38:38:java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    41:41:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    49:49:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    55:55:boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.n:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    143:144:void setSize(int,int) -> a
    154:154:boolean isFinished() -> a
    162:163:void finish() -> b
    177:177:boolean onPull(float) -> a
    189:189:boolean onRelease() -> c
    218:218:boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    60:60:java.lang.Object newEdgeEffect(android.content.Context) -> a
    64:64:void setSize(java.lang.Object,int,int) -> a
    67:67:boolean isFinished(java.lang.Object) -> a
    71:71:void finish(java.lang.Object) -> b
    74:74:boolean onPull(java.lang.Object,float) -> a
    78:78:boolean onRelease(java.lang.Object) -> c
    86:86:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    92:92:java.lang.Object newEdgeEffect(android.content.Context) -> a
    96:97:void setSize(java.lang.Object,int,int) -> a
    100:100:boolean isFinished(java.lang.Object) -> a
    104:105:void finish(java.lang.Object) -> b
    108:108:boolean onPull(java.lang.Object,float) -> a
    112:112:boolean onRelease(java.lang.Object) -> c
    120:120:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    30:30:java.lang.Object newEdgeEffect(android.content.Context) -> a
    34:35:void setSize(java.lang.Object,int,int) -> a
    38:38:boolean isFinished(java.lang.Object) -> a
    42:43:void finish(java.lang.Object) -> b
    46:47:boolean onPull(java.lang.Object,float) -> a
    51:53:boolean onRelease(java.lang.Object) -> c
    62:62:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.badlogic.gdx.Application -> com.badlogic.gdx.a:
    com.badlogic.gdx.Graphics getGraphics() -> a
    void log(java.lang.String,java.lang.String) -> a
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void debug(java.lang.String,java.lang.String) -> b
    com.badlogic.gdx.Application$ApplicationType getType() -> b
com.badlogic.gdx.Application$ApplicationType -> com.badlogic.gdx.b:
    com.badlogic.gdx.Application$ApplicationType Android -> a
    com.badlogic.gdx.Application$ApplicationType Desktop -> b
    com.badlogic.gdx.Application$ApplicationType Applet -> c
    com.badlogic.gdx.Application$ApplicationType WebGL -> d
    com.badlogic.gdx.Application$ApplicationType iOS -> e
    com.badlogic.gdx.Application$ApplicationType[] $VALUES -> f
    95:95:com.badlogic.gdx.Application$ApplicationType[] values() -> values
    95:95:com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.ApplicationListener -> com.badlogic.gdx.c:
    void create() -> a
    void resize(int,int) -> a
    void render() -> b
    void pause() -> c
    void resume() -> d
    void dispose() -> e
com.badlogic.gdx.Audio -> com.badlogic.gdx.d:
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> a
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> b
com.badlogic.gdx.Files -> com.badlogic.gdx.e:
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> a
    java.lang.String getExternalStoragePath() -> a
com.badlogic.gdx.Files$FileType -> com.badlogic.gdx.f:
    com.badlogic.gdx.Files$FileType Classpath -> a
    com.badlogic.gdx.Files$FileType Internal -> b
    com.badlogic.gdx.Files$FileType External -> c
    com.badlogic.gdx.Files$FileType Absolute -> d
    com.badlogic.gdx.Files$FileType Local -> e
    com.badlogic.gdx.Files$FileType[] $VALUES -> f
    29:29:com.badlogic.gdx.Files$FileType[] values() -> values
    29:29:com.badlogic.gdx.Files$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Game -> com.badlogic.gdx.g:
    com.badlogic.gdx.Screen screen -> a
    31:32:void dispose() -> e
    36:37:void pause() -> c
    41:42:void resume() -> d
    46:47:void render() -> b
    51:52:void resize(int,int) -> a
    57:61:void setScreen(com.badlogic.gdx.Screen) -> a
    65:65:com.badlogic.gdx.Screen getScreen() -> f
com.badlogic.gdx.Gdx -> com.badlogic.gdx.h:
    com.badlogic.gdx.Application app -> a
    com.badlogic.gdx.Graphics graphics -> b
    com.badlogic.gdx.Audio audio -> c
    com.badlogic.gdx.Input input -> d
    com.badlogic.gdx.Files files -> e
    com.badlogic.gdx.Net net -> f
    com.badlogic.gdx.graphics.GLCommon gl -> g
    com.badlogic.gdx.graphics.GL10 gl10 -> h
    com.badlogic.gdx.graphics.GL11 gl11 -> i
    com.badlogic.gdx.graphics.GL20 gl20 -> j
    com.badlogic.gdx.graphics.GLU glu -> k
com.badlogic.gdx.Graphics -> com.badlogic.gdx.i:
    boolean isGL20Available() -> a
    com.badlogic.gdx.graphics.GL20 getGL20() -> b
    int getWidth() -> c
    int getHeight() -> d
    float getDeltaTime() -> e
    int getFramesPerSecond() -> f
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> g
    boolean supportsExtension(java.lang.String) -> a
    void requestRendering() -> h
com.badlogic.gdx.Graphics$BufferFormat -> com.badlogic.gdx.j:
    int r -> a
    int g -> b
    int b -> c
    int a -> d
    int depth -> e
    int stencil -> f
    int samples -> g
    boolean coverageSampling -> h
    111:111:java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$DisplayMode -> com.badlogic.gdx.k:
    int width -> a
    int height -> b
    int refreshRate -> c
    int bitsPerPixel -> d
    84:84:java.lang.String toString() -> toString
com.badlogic.gdx.Input -> com.badlogic.gdx.l:
    void setCatchBackKey(boolean) -> a
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> a
com.badlogic.gdx.Input$Orientation -> com.badlogic.gdx.m:
    com.badlogic.gdx.Input$Orientation Landscape -> a
    com.badlogic.gdx.Input$Orientation Portrait -> b
    com.badlogic.gdx.Input$Orientation[] $VALUES -> c
    411:411:com.badlogic.gdx.Input$Orientation[] values() -> values
    411:411:com.badlogic.gdx.Input$Orientation valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$TextInputListener -> com.badlogic.gdx.n:
com.badlogic.gdx.InputAdapter -> com.badlogic.gdx.o:
    24:24:boolean keyDown(int) -> a
    28:28:boolean keyUp(int) -> b
    32:32:boolean keyTyped(char) -> a
    36:36:boolean touchDown(int,int,int,int) -> a
    40:40:boolean touchUp(int,int,int,int) -> b
    44:44:boolean touchDragged(int,int,int) -> a
com.badlogic.gdx.InputProcessor -> com.badlogic.gdx.p:
    boolean keyDown(int) -> a
    boolean keyUp(int) -> b
    boolean keyTyped(char) -> a
    boolean touchDown(int,int,int,int) -> a
    boolean touchUp(int,int,int,int) -> b
    boolean touchDragged(int,int,int) -> a
com.badlogic.gdx.Net -> com.badlogic.gdx.q:
com.badlogic.gdx.Screen -> com.badlogic.gdx.r:
    void render(float) -> a
    void resize(int,int) -> a
    void show() -> a
    void hide() -> b
    void pause() -> c
    void resume() -> d
    void dispose() -> e
com.badlogic.gdx.Version -> com.badlogic.gdx.s:
    java.lang.String VERSION -> a
com.badlogic.gdx.assets.AssetDescriptor -> com.badlogic.gdx.a.a:
    java.lang.String fileName -> a
    java.lang.Class type -> b
    com.badlogic.gdx.assets.AssetLoaderParameters params -> c
    39:43:java.lang.String toString() -> toString
com.badlogic.gdx.assets.AssetErrorListener -> com.badlogic.gdx.a.b:
    void error(java.lang.String,java.lang.Class,java.lang.Throwable) -> a
com.badlogic.gdx.assets.AssetLoaderParameters -> com.badlogic.gdx.a.c:
    com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback -> a
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback -> com.badlogic.gdx.a.d:
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> a
com.badlogic.gdx.assets.AssetLoadingTask -> com.badlogic.gdx.a.e:
    com.badlogic.gdx.assets.AssetManager manager -> a
    com.badlogic.gdx.assets.AssetDescriptor assetDesc -> b
    com.badlogic.gdx.assets.loaders.AssetLoader loader -> c
    java.util.concurrent.ExecutorService threadPool -> d
    long startTime -> e
    boolean asyncDone -> f
    boolean dependenciesLoaded -> g
    com.badlogic.gdx.utils.Array dependencies -> h
    java.util.concurrent.Future depsFuture -> i
    java.util.concurrent.Future loadFuture -> j
    java.lang.Object asset -> k
    int ticks -> l
    boolean cancel -> m
    65:80:java.lang.Void call() -> a
    90:96:boolean update() -> b
    100:114:void handleSyncLoader() -> d
    117:150:void handleAsyncLoader() -> e
    153:153:java.lang.Object getAsset() -> c
    36:36:java.lang.Object call() -> call
com.badlogic.gdx.assets.AssetManager -> com.badlogic.gdx.a.f:
    com.badlogic.gdx.utils.ObjectMap assets -> a
    com.badlogic.gdx.utils.ObjectMap assetTypes -> b
    com.badlogic.gdx.utils.ObjectMap assetDependencies -> c
    com.badlogic.gdx.utils.ObjectMap loaders -> d
    com.badlogic.gdx.utils.Array loadQueue -> e
    java.util.concurrent.ExecutorService threadPool -> f
    java.util.Stack tasks -> g
    com.badlogic.gdx.assets.AssetErrorListener listener -> h
    int loaded -> i
    int toLoad -> j
    com.badlogic.gdx.utils.Logger log -> k
    129:185:void unload(java.lang.String) -> a
    202:209:java.lang.String getAssetFileName(java.lang.Object) -> a
    215:216:boolean isLoaded(java.lang.String) -> b
    241:279:void load(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    306:317:boolean update() -> a
    336:340:void finishLoading() -> b
    344:364:void injectDependency(java.lang.String,com.badlogic.gdx.assets.AssetDescriptor) -> a
    369:384:void nextTask() -> e
    389:392:void addTask(com.badlogic.gdx.assets.AssetDescriptor) -> a
    397:430:boolean updateTask() -> f
    435:444:void incrementRefCountedDependencies(java.lang.String) -> d
    449:473:void handleTaskError(java.lang.Throwable) -> a
    509:517:void dispose() -> c
    521:559:void clear() -> d
    569:571:int getReferenceCount(java.lang.String) -> c
    577:580:void setReferenceCount(java.lang.String,int) -> a
com.badlogic.gdx.assets.RefCountedContainer -> com.badlogic.gdx.a.g:
    java.lang.Object object -> a
    int refCount -> b
    29:30:void incRefCount() -> a
    33:34:void decRefCount() -> b
    37:37:int getRefCount() -> c
    41:42:void setRefCount(int) -> a
    45:45:java.lang.Object getObject(java.lang.Class) -> a
com.badlogic.gdx.assets.loaders.AssetLoader -> com.badlogic.gdx.a.a.a:
    com.badlogic.gdx.assets.loaders.FileHandleResolver resolver -> a
    42:42:com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader -> com.badlogic.gdx.a.a.b:
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
com.badlogic.gdx.assets.loaders.FileHandleResolver -> com.badlogic.gdx.a.a.c:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader -> com.badlogic.gdx.a.a.d:
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureLoader -> com.badlogic.gdx.a.a.e:
    com.badlogic.gdx.graphics.TextureData data -> a
    com.badlogic.gdx.graphics.Texture texture -> b
    49:76:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> a
    80:90:com.badlogic.gdx.graphics.Texture loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> b
    95:95:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> a
    39:39:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    39:39:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    39:39:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter -> com.badlogic.gdx.a.a.f:
    com.badlogic.gdx.graphics.Pixmap$Format format -> b
    boolean genMipMaps -> c
    com.badlogic.gdx.graphics.Texture texture -> d
    com.badlogic.gdx.graphics.TextureData textureData -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> g
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> h
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> i
com.badlogic.gdx.audio.Music -> com.badlogic.gdx.b.a:
    void play() -> a
    void stop() -> b
    boolean isPlaying() -> d
    void setLooping(boolean) -> a
    void setVolume(float) -> a
    void dispose() -> c
com.badlogic.gdx.audio.Sound -> com.badlogic.gdx.b.b:
    long play(float) -> a
    void dispose() -> c
com.badlogic.gdx.backends.android.AndroidApplication -> com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> a
    com.badlogic.gdx.backends.android.AndroidInput input -> b
    com.badlogic.gdx.backends.android.AndroidAudio audio -> c
    com.badlogic.gdx.backends.android.AndroidFiles files -> d
    com.badlogic.gdx.backends.android.AndroidNet net -> e
    com.badlogic.gdx.ApplicationListener listener -> f
    android.os.Handler handler -> g
    boolean firstResume -> h
    com.badlogic.gdx.utils.Array runnables -> i
    com.badlogic.gdx.utils.Array executedRunnables -> j
    android.os.PowerManager$WakeLock wakeLock -> k
    int logLevel -> l
    85:88:void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> a
    101:127:void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> a
    130:133:android.widget.FrameLayout$LayoutParams createLayoutParams() -> c
    137:141:void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> a
    144:156:void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> b
    212:235:void onPause() -> onPause
    239:259:void onResume() -> onResume
    263:264:void onDestroy() -> onDestroy
    269:269:com.badlogic.gdx.Audio getAudio() -> d
    275:275:com.badlogic.gdx.Files getFiles() -> e
    281:281:com.badlogic.gdx.Graphics getGraphics() -> a
    287:287:com.badlogic.gdx.Input getInput() -> f
    292:292:com.badlogic.gdx.Net getNet() -> g
    298:298:com.badlogic.gdx.Application$ApplicationType getType() -> b
    304:304:int getVersion() -> h
    342:346:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    350:356:void exit() -> i
    360:363:void debug(java.lang.String,java.lang.String) -> b
    374:375:void log(java.lang.String,java.lang.String) -> a
    379:380:void log(java.lang.String,java.lang.String,java.lang.Exception) -> a
    389:390:void error(java.lang.String,java.lang.String,java.lang.Throwable) -> a
com.badlogic.gdx.backends.android.AndroidApplication$1 -> com.badlogic.gdx.backends.android.a:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> a
    353:354:void run() -> run
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration -> com.badlogic.gdx.backends.android.b:
    boolean useGL20 -> a
    int r -> b
    int g -> c
    int b -> d
    int a -> e
    int depth -> f
    int stencil -> g
    int numSamples -> h
    boolean useAccelerometer -> i
    boolean useCompass -> j
    int touchSleepTime -> k
    boolean useWakelock -> l
    boolean hideStatusBar -> m
    int maxSimultaneousSounds -> n
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> o
    boolean getTouchEventsForLiveWallpaper -> p
com.badlogic.gdx.backends.android.AndroidAudio -> com.badlogic.gdx.backends.android.c:
    android.media.SoundPool soundPool -> b
    android.media.AudioManager manager -> c
    java.util.List musics -> a
    56:66:void pause() -> a
    69:74:void resume() -> b
    85:114:com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> b
    123:138:com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> a
    151:159:void dispose() -> c
com.badlogic.gdx.backends.android.AndroidFileHandle -> com.badlogic.gdx.backends.android.d:
    android.content.res.AssetManager assets -> a
    69:76:java.io.InputStream read() -> a
    149:155:long length() -> b
com.badlogic.gdx.backends.android.AndroidFiles -> com.badlogic.gdx.backends.android.e:
    java.lang.String sdcard -> a
    java.lang.String localpath -> b
    android.content.res.AssetManager assets -> c
    55:55:com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> a
    76:76:java.lang.String getExternalStoragePath() -> a
com.badlogic.gdx.backends.android.AndroidGL10 -> com.badlogic.gdx.backends.android.f:
    javax.microedition.khronos.opengles.GL10 gl -> a
    46:47:void glBindTexture(int,int) -> glBindTexture
    51:52:void glBlendFunc(int,int) -> glBlendFunc
    56:57:void glClear(int) -> glClear
    61:62:void glClearColor(float,float,float,float) -> glClearColor
    76:77:void glClientActiveTexture(int) -> a
    91:92:void glColorPointer(int,int,int,java.nio.Buffer) -> a
    97:98:void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    123:124:void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    133:134:void glDepthMask(boolean) -> glDepthMask
    143:144:void glDisable(int) -> glDisable
    148:149:void glDisableClientState(int) -> b
    153:154:void glDrawArrays(int,int,int) -> glDrawArrays
    158:159:void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    163:164:void glEnable(int) -> glEnable
    168:169:void glEnableClientState(int) -> c
    203:204:void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    213:214:void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    218:218:java.lang.String glGetString(int) -> glGetString
    278:279:void glMatrixMode(int) -> d
    298:299:void glNormalPointer(int,int,java.nio.Buffer) -> a
    308:309:void glPixelStorei(int,int) -> glPixelStorei
    378:379:void glTexCoordPointer(int,int,int,java.nio.Buffer) -> b
    394:395:void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    399:400:void glTexParameterf(int,int,float) -> glTexParameterf
    415:416:void glVertexPointer(int,int,int,java.nio.Buffer) -> c
    455:456:void glLoadMatrixf(float[],int) -> a
com.badlogic.gdx.backends.android.AndroidGL11 -> com.badlogic.gdx.backends.android.g:
    javax.microedition.khronos.opengles.GL11 gl -> b
    40:41:void glBindBuffer(int,int) -> a
    45:46:void glBufferData(int,int,java.nio.Buffer,int) -> a
    50:51:void glBufferSubData(int,int,int,java.nio.Buffer) -> d
    65:66:void glDeleteBuffers(int,java.nio.IntBuffer) -> a
    70:71:void glGenBuffers(int,java.nio.IntBuffer) -> b
    260:261:void glColorPointer(int,int,int,int) -> a
    265:266:void glNormalPointer(int,int,int) -> a
    270:271:void glTexCoordPointer(int,int,int,int) -> b
    275:276:void glVertexPointer(int,int,int,int) -> c
    280:281:void glDrawElements(int,int,int,int) -> d
com.badlogic.gdx.backends.android.AndroidGL20 -> com.badlogic.gdx.backends.android.AndroidGL20:
    void init() -> init
    void glAttachShader(int,int) -> glAttachShader
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glCompileShader(int) -> glCompileShader
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthMask(boolean) -> glDepthMask
    void glDisable(int) -> glDisable
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    java.lang.String glGetString(int) -> glGetString
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glLinkProgram(int) -> glLinkProgram
    void glPixelStorei(int,int) -> glPixelStorei
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glUniform1i(int,int) -> glUniform1i
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.backends.android.AndroidGLU -> com.badlogic.gdx.backends.android.h:
com.badlogic.gdx.backends.android.AndroidGraphics -> com.badlogic.gdx.backends.android.i:
    android.view.View view -> a
    int width -> b
    int height -> c
    com.badlogic.gdx.backends.android.AndroidApplication app -> d
    com.badlogic.gdx.graphics.GLCommon gl -> e
    com.badlogic.gdx.graphics.GL10 gl10 -> f
    com.badlogic.gdx.graphics.GL11 gl11 -> g
    com.badlogic.gdx.graphics.GL20 gl20 -> h
    com.badlogic.gdx.graphics.GLU glu -> i
    javax.microedition.khronos.egl.EGLContext eglContext -> j
    java.lang.String extensions -> k
    long lastFrameTime -> s
    float deltaTime -> t
    long frameStart -> u
    int frames -> v
    int fps -> w
    com.badlogic.gdx.math.WindowedMean mean -> x
    boolean created -> l
    boolean running -> m
    boolean pause -> n
    boolean resume -> o
    boolean destroy -> p
    float ppiX -> y
    float ppiY -> z
    float ppcX -> A
    float ppcY -> B
    float density -> C
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> D
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> E
    boolean isContinuous -> F
    int[] value -> q
    java.lang.Object synch -> r
    101:117:void setPreserveContext(android.view.View) -> a
    120:157:android.view.View createGLSurfaceView(android.app.Activity,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> a
    163:163:android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> o
    168:176:void updatePpi() -> p
    179:193:boolean checkGL20() -> q
    211:211:com.badlogic.gdx.graphics.GL20 getGL20() -> b
    217:217:int getHeight() -> d
    223:223:int getWidth() -> c
    235:235:boolean isGL20Available() -> a
    248:281:void setupGL(javax.microedition.khronos.opengles.GL10) -> a
    285:297:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    301:323:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    326:345:void logConfig(javax.microedition.khronos.egl.EGLConfig) -> a
    350:353:int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
    359:363:void resume() -> i
    366:378:void pause() -> j
    381:393:void destroy() -> k
    397:471:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    476:476:float getDeltaTime() -> e
    493:493:int getFramesPerSecond() -> f
    497:506:void clearManagedCaches() -> l
    509:509:android.view.View getView() -> m
    581:583:com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> g
    597:598:boolean supportsExtension(java.lang.String) -> a
    603:610:void setContinuousRendering(boolean) -> a
    613:613:boolean isContinuousRendering() -> n
    618:622:void requestRendering() -> h
com.badlogic.gdx.backends.android.AndroidGraphics$1 -> com.badlogic.gdx.backends.android.j:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> a
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> b
    139:142:void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode -> com.badlogic.gdx.backends.android.k:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> e
com.badlogic.gdx.backends.android.AndroidInput -> com.badlogic.gdx.backends.android.l:
    com.badlogic.gdx.utils.Pool usedKeyEvents -> a
    com.badlogic.gdx.utils.Pool usedTouchEvents -> b
    java.util.ArrayList keyEvents -> c
    java.util.ArrayList touchEvents -> d
    int[] touchX -> e
    int[] touchY -> f
    int[] deltaX -> g
    int[] deltaY -> h
    boolean[] touched -> i
    int[] realId -> j
    boolean hasMultitouch -> k
    com.badlogic.gdx.utils.IntMap keys -> t
    android.hardware.SensorManager manager -> u
    boolean accelerometerAvailable -> l
    float[] accelerometerValues -> v
    java.lang.String text -> w
    com.badlogic.gdx.Input$TextInputListener textListener -> x
    android.os.Handler handle -> y
    com.badlogic.gdx.Application app -> m
    android.content.Context context -> n
    com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler -> z
    int sleepTime -> A
    boolean catchBack -> B
    boolean catchMenu -> C
    android.os.Vibrator vibrator -> o
    boolean compassAvailable -> D
    boolean keyboardAvailable -> p
    float[] magneticFieldValues -> E
    float azimuth -> F
    float pitch -> G
    float roll -> H
    float inclination -> I
    boolean justTouched -> J
    com.badlogic.gdx.InputProcessor processor -> K
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> L
    com.badlogic.gdx.Input$Orientation nativeOrientation -> M
    long currentEventTimeStamp -> N
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard -> O
    android.hardware.SensorEventListener accelerometerListener -> P
    android.hardware.SensorEventListener compassListener -> Q
    boolean requestFocus -> q
    float[] R -> r
    float[] orientation -> s
    319:322:void setInputProcessor(com.badlogic.gdx.InputProcessor) -> a
    325:389:void processEvents() -> a
    395:410:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    454:506:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    529:530:void setCatchBackKey(boolean) -> a
    611:639:void registerSensorListeners() -> b
    642:654:void unregisterSensorListeners() -> c
    673:681:int getFreePointerIndex() -> d
    685:695:int lookUpPointerIndex(int) -> a
    700:718:int getRotation() -> e
com.badlogic.gdx.backends.android.AndroidInput$1 -> com.badlogic.gdx.backends.android.m:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> a
    81:81:com.badlogic.gdx.backends.android.AndroidInput$KeyEvent newObject() -> a
    79:79:java.lang.Object newObject() -> b
com.badlogic.gdx.backends.android.AndroidInput$2 -> com.badlogic.gdx.backends.android.n:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> a
    87:87:com.badlogic.gdx.backends.android.AndroidInput$TouchEvent newObject() -> a
    85:85:java.lang.Object newObject() -> b
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent -> com.badlogic.gdx.backends.android.o:
    long timeStamp -> a
    int type -> b
    int keyCode -> c
    char keyChar -> d
com.badlogic.gdx.backends.android.AndroidInput$SensorListener -> com.badlogic.gdx.backends.android.p:
    float[] accelerometerValues -> a
    float[] magneticFieldValues -> b
    com.badlogic.gdx.Input$Orientation nativeOrientation -> c
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> d
    782:782:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    786:798:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent -> com.badlogic.gdx.backends.android.q:
    long timeStamp -> a
    int type -> b
    int x -> c
    int y -> d
    int pointer -> e
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService:
    java.lang.String TAG -> a
    boolean DEBUG -> b
    int runningEngines -> c
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler -> com.badlogic.gdx.backends.android.r:
    31:91:void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> a
    115:122:void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> a
    125:125:boolean supportsMultitouch(android.content.Context) -> a
com.badlogic.gdx.backends.android.AndroidMusic -> com.badlogic.gdx.backends.android.s:
    com.badlogic.gdx.backends.android.AndroidAudio audio -> b
    android.media.MediaPlayer player -> c
    boolean isPrepared -> d
    boolean wasPlaying -> a
    39:51:void dispose() -> c
    60:60:boolean isPlaying() -> d
    65:66:void pause() -> e
    70:83:void play() -> a
    87:88:void setLooping(boolean) -> a
    92:93:void setVolume(float) -> a
    97:102:void stop() -> b
com.badlogic.gdx.backends.android.AndroidNet -> com.badlogic.gdx.backends.android.t:
    com.badlogic.gdx.backends.android.AndroidApplication app -> a
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard -> com.badlogic.gdx.backends.android.u:
    android.content.Context context -> a
    android.os.Handler handler -> b
    com.badlogic.gdx.backends.android.AndroidInput input -> c
    306:306:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    311:311:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.badlogic.gdx.backends.android.AndroidSingleTouchHandler -> com.badlogic.gdx.backends.android.v:
    30:59:void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> a
    62:72:void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> a
    75:75:boolean supportsMultitouch(android.content.Context) -> a
com.badlogic.gdx.backends.android.AndroidSound -> com.badlogic.gdx.backends.android.w:
    android.media.SoundPool soundPool -> a
    android.media.AudioManager manager -> b
    int soundId -> c
    com.badlogic.gdx.utils.IntArray streamIds -> d
    39:40:void dispose() -> c
    49:52:long play(float) -> a
com.badlogic.gdx.backends.android.AndroidTouchHandler -> com.badlogic.gdx.backends.android.x:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> a
    boolean supportsMultitouch(android.content.Context) -> a
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.a:
    27:30:com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager sGLThreadManager -> a
    boolean mSizeChanged -> b
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mGLThread -> h
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> c
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory mEGLContextFactory -> d
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> e
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper mGLWrapper -> f
    int mDebugFlags -> g
    176:178:void init() -> a
    189:190:void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper) -> setGLWrapper
    198:199:void setDebugFlags(int) -> setDebugFlags
    204:204:int getDebugFlags() -> getDebugFlags
    231:243:void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    252:254:void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory) -> setEGLContextFactory
    262:264:void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory) -> setEGLWindowSurfaceFactory
    274:276:void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    288:289:void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    299:300:void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    315:316:void setRenderMode(int) -> setRenderMode
    323:323:int getRenderMode() -> getRenderMode
    330:331:void requestRender() -> requestRender
    336:337:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    343:344:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    349:350:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    355:356:void onPause() -> onPause
    362:363:void onResume() -> onResume
    369:370:void queueEvent(java.lang.Runnable) -> queueEvent
    376:378:void onDetachedFromWindow() -> onDetachedFromWindow
    1041:1044:void checkRenderThreadState() -> b
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.b:
    int[] mConfigSpec -> a
    455:470:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.c:
    int[] mValue -> h
    int mRedSize -> b
    int mGreenSize -> c
    int mBlueSize -> d
    int mAlphaSize -> e
    int mDepthSize -> f
    int mStencilSize -> g
    495:513:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    518:521:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.d:
    420:420:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    424:425:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.e:
    441:441:javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    445:446:void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.f:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.g:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.h:
    javax.microedition.khronos.egl.EGL10 mEgl -> a
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> b
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> c
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> d
    javax.microedition.khronos.egl.EGLContext mEglContext -> e
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> f
    558:581:void start() -> a
    590:631:javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> a
    637:643:boolean swap() -> b
    647:652:void destroySurface() -> c
    655:663:void finish() -> d
    666:666:void throwEglException(java.lang.String) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread -> com.badlogic.gdx.backends.android.surfaceview.i:
    boolean mShouldExit -> c
    boolean mExited -> a
    boolean mPaused -> d
    boolean mHasSurface -> e
    boolean mWaitingForSurface -> f
    boolean mHaveEgl -> g
    int mWidth -> h
    int mHeight -> i
    int mRenderMode -> j
    boolean mRequestRender -> k
    boolean mRenderComplete -> l
    java.util.ArrayList mEventQueue -> m
    android.opengl.GLSurfaceView$Renderer mRenderer -> n
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper mEglHelper -> o
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> b
    693:705:void run() -> run
    711:717:void stopEglLocked() -> h
    720:866:void guardedRun() -> i
    871:878:void setRenderMode(int) -> a
    881:883:int getRenderMode() -> a
    887:891:void requestRender() -> b
    894:901:void surfaceCreated() -> c
    904:918:void surfaceDestroyed() -> d
    921:925:void onPause() -> e
    928:933:void onResume() -> f
    936:956:void onWindowResize(int,int) -> a
    961:972:void requestExitAndWait() -> g
    977:984:void queueEvent(java.lang.Runnable) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.j:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mEglOwner -> a
    1052:1057:void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> a
    1066:1071:boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> b
    1078:1082:void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> c
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.k:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.l:
    java.lang.StringBuilder mBuilder -> a
    1010:1011:void close() -> close
    1015:1016:void flush() -> flush
    1020:1028:void write(char[],int,int) -> write
    1031:1035:void flushBuilder() -> a
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.m:
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper -> com.badlogic.gdx.backends.android.surfaceview.n:
    56:63:javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer) -> a
com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper -> com.badlogic.gdx.backends.android.surfaceview.o:
    boolean mCheckError -> a
    boolean mCheckThread -> b
    java.lang.Thread mOurThread -> c
    38:48:void checkThread() -> a
    51:57:void checkError() -> b
    63:66:void glActiveTexture(int) -> glActiveTexture
    69:72:void glAlphaFunc(int,float) -> glAlphaFunc
    75:78:void glAlphaFuncx(int,int) -> glAlphaFuncx
    81:84:void glBindTexture(int,int) -> glBindTexture
    87:90:void glBlendFunc(int,int) -> glBlendFunc
    93:96:void glClear(int) -> glClear
    99:102:void glClearColor(float,float,float,float) -> glClearColor
    105:108:void glClearColorx(int,int,int,int) -> glClearColorx
    111:114:void glClearDepthf(float) -> glClearDepthf
    117:120:void glClearDepthx(int) -> glClearDepthx
    123:126:void glClearStencil(int) -> glClearStencil
    129:132:void glClientActiveTexture(int) -> glClientActiveTexture
    135:138:void glColor4f(float,float,float,float) -> glColor4f
    141:144:void glColor4x(int,int,int,int) -> glColor4x
    147:150:void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    153:156:void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    160:163:void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    167:170:void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    173:176:void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    179:182:void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    185:188:void glCullFace(int) -> glCullFace
    191:194:void glDeleteTextures(int,int[],int) -> glDeleteTextures
    197:200:void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    203:206:void glDepthFunc(int) -> glDepthFunc
    209:212:void glDepthMask(boolean) -> glDepthMask
    215:218:void glDepthRangef(float,float) -> glDepthRangef
    221:224:void glDepthRangex(int,int) -> glDepthRangex
    227:230:void glDisable(int) -> glDisable
    233:236:void glDisableClientState(int) -> glDisableClientState
    239:242:void glDrawArrays(int,int,int) -> glDrawArrays
    245:248:void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    251:254:void glEnable(int) -> glEnable
    257:260:void glEnableClientState(int) -> glEnableClientState
    263:266:void glFinish() -> glFinish
    269:272:void glFlush() -> glFlush
    275:278:void glFogf(int,float) -> glFogf
    281:284:void glFogfv(int,float[],int) -> glFogfv
    287:290:void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    293:296:void glFogx(int,int) -> glFogx
    299:302:void glFogxv(int,int[],int) -> glFogxv
    305:308:void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    311:314:void glFrontFace(int) -> glFrontFace
    317:320:void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    323:326:void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    329:332:void glGenTextures(int,int[],int) -> glGenTextures
    335:338:void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    341:343:int glGetError() -> glGetError
    347:350:void glGetIntegerv(int,int[],int) -> glGetIntegerv
    353:356:void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    359:362:java.lang.String glGetString(int) -> glGetString
    366:369:void glHint(int,int) -> glHint
    372:375:void glLightModelf(int,float) -> glLightModelf
    378:381:void glLightModelfv(int,float[],int) -> glLightModelfv
    384:387:void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    390:393:void glLightModelx(int,int) -> glLightModelx
    396:399:void glLightModelxv(int,int[],int) -> glLightModelxv
    402:405:void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    408:411:void glLightf(int,int,float) -> glLightf
    414:417:void glLightfv(int,int,float[],int) -> glLightfv
    420:423:void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    426:429:void glLightx(int,int,int) -> glLightx
    432:435:void glLightxv(int,int,int[],int) -> glLightxv
    438:441:void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    444:447:void glLineWidth(float) -> glLineWidth
    450:453:void glLineWidthx(int) -> glLineWidthx
    456:459:void glLoadIdentity() -> glLoadIdentity
    462:465:void glLoadMatrixf(float[],int) -> glLoadMatrixf
    468:471:void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    474:477:void glLoadMatrixx(int[],int) -> glLoadMatrixx
    480:483:void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    486:489:void glLogicOp(int) -> glLogicOp
    492:495:void glMaterialf(int,int,float) -> glMaterialf
    498:501:void glMaterialfv(int,int,float[],int) -> glMaterialfv
    504:507:void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    510:513:void glMaterialx(int,int,int) -> glMaterialx
    516:519:void glMaterialxv(int,int,int[],int) -> glMaterialxv
    522:525:void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    528:531:void glMatrixMode(int) -> glMatrixMode
    534:537:void glMultMatrixf(float[],int) -> glMultMatrixf
    540:543:void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    546:549:void glMultMatrixx(int[],int) -> glMultMatrixx
    552:555:void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    558:561:void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    564:567:void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    570:573:void glNormal3f(float,float,float) -> glNormal3f
    576:579:void glNormal3x(int,int,int) -> glNormal3x
    582:585:void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    588:591:void glOrthof(float,float,float,float,float,float) -> glOrthof
    594:597:void glOrthox(int,int,int,int,int,int) -> glOrthox
    600:603:void glPixelStorei(int,int) -> glPixelStorei
    606:609:void glPointSize(float) -> glPointSize
    612:615:void glPointSizex(int) -> glPointSizex
    618:621:void glPolygonOffset(float,float) -> glPolygonOffset
    624:627:void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    630:633:void glPopMatrix() -> glPopMatrix
    636:639:void glPushMatrix() -> glPushMatrix
    642:645:void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    648:651:void glRotatef(float,float,float,float) -> glRotatef
    654:657:void glRotatex(int,int,int,int) -> glRotatex
    660:663:void glSampleCoverage(float,boolean) -> glSampleCoverage
    666:669:void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    672:675:void glScalef(float,float,float) -> glScalef
    678:681:void glScalex(int,int,int) -> glScalex
    684:687:void glScissor(int,int,int,int) -> glScissor
    690:693:void glShadeModel(int) -> glShadeModel
    696:699:void glStencilFunc(int,int,int) -> glStencilFunc
    702:705:void glStencilMask(int) -> glStencilMask
    708:711:void glStencilOp(int,int,int) -> glStencilOp
    714:717:void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    720:723:void glTexEnvf(int,int,float) -> glTexEnvf
    726:729:void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    732:735:void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    738:741:void glTexEnvx(int,int,int) -> glTexEnvx
    744:747:void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    750:753:void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    757:760:void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    763:766:void glTexParameterf(int,int,float) -> glTexParameterf
    769:772:void glTexParameterx(int,int,int) -> glTexParameterx
    775:778:void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    781:784:void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    788:791:void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    794:797:void glTranslatef(float,float,float) -> glTranslatef
    800:803:void glTranslatex(int,int,int) -> glTranslatex
    806:809:void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    812:815:void glViewport(int,int,int,int) -> glViewport
    818:821:void glClipPlanef(int,float[],int) -> glClipPlanef
    824:827:void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    830:833:void glClipPlanex(int,int[],int) -> glClipPlanex
    836:839:void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    844:847:void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    850:853:void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    856:859:void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    862:865:void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    868:871:void glDrawTexivOES(int[],int) -> glDrawTexivOES
    874:877:void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    880:883:void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    886:889:void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    892:895:void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    898:901:void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    904:907:void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    910:913:void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    916:919:int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    923:926:int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
com.badlogic.gdx.backends.android.surfaceview.GLException -> com.badlogic.gdx.backends.android.surfaceview.p:
    int mError -> a
    32:36:java.lang.String getErrorString(int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.q:
    java.io.Writer mLog -> k
    boolean mLogArgumentNames -> l
    int mArgCount -> m
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mColorPointer -> n
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mNormalPointer -> o
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mTexCoordPointer -> p
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mVertexPointer -> q
    boolean mColorArrayEnabled -> a
    boolean mNormalArrayEnabled -> b
    boolean mTextureCoordArrayEnabled -> c
    boolean mVertexArrayEnabled -> d
    java.lang.StringBuilder mStringBuilder -> e
    45:49:void checkError() -> a
    52:53:void logLine(java.lang.String) -> a
    57:61:void log(java.lang.String) -> b
    64:66:void begin(java.lang.String) -> c
    69:76:void arg(java.lang.String,java.lang.String) -> a
    79:81:void end() -> b
    85:89:void flush() -> c
    92:93:void arg(java.lang.String,boolean) -> a
    96:97:void arg(java.lang.String,int) -> a
    100:101:void arg(java.lang.String,float) -> a
    104:106:void returns(java.lang.String) -> d
    109:110:void returns(int) -> a
    113:114:void arg(java.lang.String,int,int[],int) -> a
    117:118:void arg(java.lang.String,int,short[],int) -> a
    121:122:void arg(java.lang.String,int,float[],int) -> a
    125:136:void formattedAppend(java.lang.StringBuilder,int,int) -> a
    139:153:java.lang.String toString(int,int,int[],int) -> a
    157:171:java.lang.String toString(int,short[],int) -> a
    175:189:java.lang.String toString(int,float[],int) -> a
    193:199:java.lang.String toString(int,java.nio.FloatBuffer) -> a
    203:211:java.lang.String toString(int,int,java.nio.IntBuffer) -> a
    215:221:java.lang.String toString(int,java.nio.ShortBuffer) -> a
    225:226:void arg(java.lang.String,int,java.nio.FloatBuffer) -> a
    229:230:void arg(java.lang.String,int,java.nio.IntBuffer) -> a
    233:234:void arg(java.lang.String,int,java.nio.ShortBuffer) -> a
    237:241:void argPointer(int,int,int,java.nio.Buffer) -> a
    244:244:java.lang.String getHex(int) -> b
    269:294:java.lang.String getClearBufferMask(int) -> c
    298:323:java.lang.String getFactor(int) -> d
    328:334:java.lang.String getShadeModel(int) -> e
    339:343:java.lang.String getTextureTarget(int) -> f
    348:352:java.lang.String getTextureEnvTarget(int) -> g
    357:363:java.lang.String getTextureEnvPName(int) -> h
    368:374:int getTextureEnvParamCount(int) -> i
    379:398:java.lang.String getTextureEnvParamName(float) -> a
    402:410:java.lang.String getMatrixMode(int) -> j
    415:425:java.lang.String getClientState(int) -> k
    430:496:java.lang.String getCap(int) -> l
    501:515:java.lang.String getTexturePName(int) -> m
    520:543:java.lang.String getTextureParamName(float) -> b
    547:559:java.lang.String getFogPName(int) -> n
    564:576:int getFogParamCount(int) -> o
    581:597:java.lang.String getBeginMode(int) -> p
    602:608:java.lang.String getIndexType(int) -> q
    613:667:java.lang.String getIntegerStateName(int) -> r
    672:729:int getIntegerStateSize(int) -> s
    734:741:int getIntegerStateFormat(int) -> t
    746:760:java.lang.String getHintTarget(int) -> u
    765:773:java.lang.String getHintMode(int) -> v
    778:782:java.lang.String getFaceName(int) -> w
    787:801:java.lang.String getMaterialPName(int) -> x
    806:820:int getMaterialParamCount(int) -> y
    825:828:java.lang.String getLightName(int) -> z
    832:854:java.lang.String getLightPName(int) -> A
    859:881:int getLightParamCount(int) -> B
    886:892:java.lang.String getLightModelPName(int) -> C
    897:903:int getLightModelParamCount(int) -> D
    908:920:java.lang.String getPointerTypeName(int) -> E
    925:1017:java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer) -> a
    1021:1051:char[] toCharIndices(int,int,java.nio.Buffer) -> a
    1055:1115:void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int) -> a
    1118:1128:void doElement(java.lang.StringBuilder,int,int) -> b
    1131:1135:void bindArrays() -> d
    1138:1142:void unbindArrays() -> e
    1145:1148:void startLogIndices() -> f
    1151:1153:void endLogIndices() -> g
    1159:1164:void glActiveTexture(int) -> glActiveTexture
    1167:1173:void glAlphaFunc(int,float) -> glAlphaFunc
    1176:1182:void glAlphaFuncx(int,int) -> glAlphaFuncx
    1185:1191:void glBindTexture(int,int) -> glBindTexture
    1194:1201:void glBlendFunc(int,int) -> glBlendFunc
    1204:1210:void glClear(int) -> glClear
    1213:1222:void glClearColor(float,float,float,float) -> glClearColor
    1225:1234:void glClearColorx(int,int,int,int) -> glClearColorx
    1237:1243:void glClearDepthf(float) -> glClearDepthf
    1246:1252:void glClearDepthx(int) -> glClearDepthx
    1255:1261:void glClearStencil(int) -> glClearStencil
    1264:1270:void glClientActiveTexture(int) -> glClientActiveTexture
    1273:1282:void glColor4f(float,float,float,float) -> glColor4f
    1285:1294:void glColor4x(int,int,int,int) -> glColor4x
    1297:1306:void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    1309:1316:void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    1320:1333:void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    1337:1351:void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    1354:1367:void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    1370:1383:void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    1386:1392:void glCullFace(int) -> glCullFace
    1395:1403:void glDeleteTextures(int,int[],int) -> glDeleteTextures
    1406:1413:void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    1416:1422:void glDepthFunc(int) -> glDepthFunc
    1425:1431:void glDepthMask(boolean) -> glDepthMask
    1434:1441:void glDepthRangef(float,float) -> glDepthRangef
    1444:1451:void glDepthRangex(int,int) -> glDepthRangex
    1454:1460:void glDisable(int) -> glDisable
    1463:1483:void glDisableClientState(int) -> glDisableClientState
    1486:1499:void glDrawArrays(int,int,int) -> glDrawArrays
    1502:1517:void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    1520:1526:void glEnable(int) -> glEnable
    1529:1549:void glEnableClientState(int) -> glEnableClientState
    1552:1557:void glFinish() -> glFinish
    1560:1565:void glFlush() -> glFlush
    1568:1575:void glFogf(int,float) -> glFogf
    1578:1586:void glFogfv(int,float[],int) -> glFogfv
    1589:1596:void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    1599:1606:void glFogx(int,int) -> glFogx
    1609:1617:void glFogxv(int,int[],int) -> glFogxv
    1620:1627:void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    1630:1636:void glFrontFace(int) -> glFrontFace
    1639:1650:void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    1653:1664:void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    1667:1677:void glGenTextures(int,int[],int) -> glGenTextures
    1680:1689:void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    1692:1698:int glGetError() -> glGetError
    1702:1712:void glGetIntegerv(int,int[],int) -> glGetIntegerv
    1715:1724:void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    1727:1735:java.lang.String glGetString(int) -> glGetString
    1739:1746:void glHint(int,int) -> glHint
    1749:1756:void glLightModelf(int,float) -> glLightModelf
    1759:1767:void glLightModelfv(int,float[],int) -> glLightModelfv
    1770:1777:void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    1780:1787:void glLightModelx(int,int) -> glLightModelx
    1790:1798:void glLightModelxv(int,int[],int) -> glLightModelxv
    1801:1808:void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    1811:1819:void glLightf(int,int,float) -> glLightf
    1822:1831:void glLightfv(int,int,float[],int) -> glLightfv
    1834:1842:void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    1845:1853:void glLightx(int,int,int) -> glLightx
    1856:1865:void glLightxv(int,int,int[],int) -> glLightxv
    1868:1876:void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    1879:1885:void glLineWidth(float) -> glLineWidth
    1888:1894:void glLineWidthx(int) -> glLineWidthx
    1897:1902:void glLoadIdentity() -> glLoadIdentity
    1905:1912:void glLoadMatrixf(float[],int) -> glLoadMatrixf
    1915:1921:void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    1924:1931:void glLoadMatrixx(int[],int) -> glLoadMatrixx
    1934:1940:void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    1943:1949:void glLogicOp(int) -> glLogicOp
    1952:1960:void glMaterialf(int,int,float) -> glMaterialf
    1963:1972:void glMaterialfv(int,int,float[],int) -> glMaterialfv
    1975:1983:void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    1986:1994:void glMaterialx(int,int,int) -> glMaterialx
    1997:2006:void glMaterialxv(int,int,int[],int) -> glMaterialxv
    2009:2017:void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    2020:2026:void glMatrixMode(int) -> glMatrixMode
    2029:2036:void glMultMatrixf(float[],int) -> glMultMatrixf
    2039:2045:void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    2048:2055:void glMultMatrixx(int[],int) -> glMultMatrixx
    2058:2064:void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    2067:2077:void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    2080:2090:void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    2093:2101:void glNormal3f(float,float,float) -> glNormal3f
    2104:2112:void glNormal3x(int,int,int) -> glNormal3x
    2115:2124:void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    2127:2138:void glOrthof(float,float,float,float,float,float) -> glOrthof
    2141:2152:void glOrthox(int,int,int,int,int,int) -> glOrthox
    2155:2162:void glPixelStorei(int,int) -> glPixelStorei
    2165:2171:void glPointSize(float) -> glPointSize
    2174:2180:void glPointSizex(int) -> glPointSizex
    2183:2189:void glPolygonOffset(float,float) -> glPolygonOffset
    2192:2199:void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    2202:2207:void glPopMatrix() -> glPopMatrix
    2210:2215:void glPushMatrix() -> glPushMatrix
    2218:2230:void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    2233:2242:void glRotatef(float,float,float,float) -> glRotatef
    2245:2254:void glRotatex(int,int,int,int) -> glRotatex
    2257:2264:void glSampleCoverage(float,boolean) -> glSampleCoverage
    2267:2274:void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    2277:2285:void glScalef(float,float,float) -> glScalef
    2288:2296:void glScalex(int,int,int) -> glScalex
    2299:2308:void glScissor(int,int,int,int) -> glScissor
    2311:2317:void glShadeModel(int) -> glShadeModel
    2320:2328:void glStencilFunc(int,int,int) -> glStencilFunc
    2331:2337:void glStencilMask(int) -> glStencilMask
    2340:2348:void glStencilOp(int,int,int) -> glStencilOp
    2351:2358:void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    2361:2369:void glTexEnvf(int,int,float) -> glTexEnvf
    2372:2381:void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    2384:2392:void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    2395:2403:void glTexEnvx(int,int,int) -> glTexEnvx
    2406:2415:void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    2418:2426:void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    2430:2444:void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    2447:2455:void glTexParameterf(int,int,float) -> glTexParameterf
    2458:2466:void glTexParameterx(int,int,int) -> glTexParameterx
    2469:2477:void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    2480:2488:void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    2492:2505:void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    2508:2515:void glTranslatef(float,float,float) -> glTranslatef
    2518:2525:void glTranslatex(int,int,int) -> glTranslatex
    2528:2534:void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    2537:2545:void glViewport(int,int,int,int) -> glViewport
    2548:2555:void glClipPlanef(int,float[],int) -> glClipPlanef
    2558:2564:void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    2567:2574:void glClipPlanex(int,int[],int) -> glClipPlanex
    2577:2583:void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    2588:2597:void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    2600:2606:void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    2609:2614:void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    2617:2626:void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    2629:2635:void glDrawTexivOES(int[],int) -> glDrawTexivOES
    2638:2643:void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    2646:2655:void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    2658:2664:void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    2667:2672:void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    2675:2684:void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    2687:2693:void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    2696:2701:void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    2704:2712:int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    2716:2724:int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
    2730:2730:void glBindBuffer(int,int) -> glBindBuffer
    2734:2734:void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    2738:2738:void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    2742:2742:void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    2746:2746:void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    2750:2750:void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    2754:2754:void glGenBuffers(int,int[],int) -> glGenBuffers
    2758:2758:void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    2762:2762:void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    2766:2766:void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    2770:2770:void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    2774:2774:void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    2778:2778:void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    2782:2782:void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    2786:2786:void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    2790:2790:void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    2794:2794:void glGetFixedv(int,int[],int) -> glGetFixedv
    2798:2798:void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    2802:2802:void glGetFloatv(int,float[],int) -> glGetFloatv
    2806:2806:void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    2810:2810:void glGetLightfv(int,int,float[],int) -> glGetLightfv
    2814:2814:void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    2818:2818:void glGetLightxv(int,int,int[],int) -> glGetLightxv
    2822:2822:void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    2826:2826:void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    2830:2830:void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    2834:2834:void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    2838:2838:void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    2842:2842:void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    2846:2846:void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    2850:2850:void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    2854:2854:void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    2858:2858:void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    2862:2862:void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    2866:2866:void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    2870:2870:void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    2874:2874:void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    2878:2878:void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    2882:2882:boolean glIsBuffer(int) -> glIsBuffer
    2886:2886:boolean glIsEnabled(int) -> glIsEnabled
    2890:2890:boolean glIsTexture(int) -> glIsTexture
    2894:2894:void glPointParameterf(int,float) -> glPointParameterf
    2898:2898:void glPointParameterfv(int,float[],int) -> glPointParameterfv
    2902:2902:void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    2906:2906:void glPointParameterx(int,int) -> glPointParameterx
    2910:2910:void glPointParameterxv(int,int[],int) -> glPointParameterxv
    2914:2914:void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    2918:2918:void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    2922:2922:void glTexEnvi(int,int,int) -> glTexEnvi
    2926:2926:void glTexEnviv(int,int,int[],int) -> glTexEnviv
    2930:2930:void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    2934:2934:void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    2938:2938:void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    2942:2942:void glTexParameteri(int,int,int) -> glTexParameteri
    2946:2946:void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    2950:2950:void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo -> com.badlogic.gdx.backends.android.surfaceview.r:
    int mSize -> a
    int mType -> b
    int mStride -> c
    java.nio.Buffer mPointer -> d
    java.nio.ByteBuffer mTempByteBuffer -> e
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper this$0 -> f
    2971:2983:int sizeof(int) -> a
    2988:2988:int getStride() -> a
    2992:2993:void bindByteBuffer() -> b
    2996:2997:void unbindByteBuffer() -> c
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.surfaceview.s:
    java.lang.String TAG -> a
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> b
    58:60:void onMeasure(int,int) -> onMeasure
    69:86:void init(boolean,int,int) -> a
    107:110:void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.t:
    int EGL_OPENGL_ES2_BIT -> g
    int[] s_configAttribs2 -> h
    int mRedSize -> a
    int mGreenSize -> b
    int mBlueSize -> c
    int mAlphaSize -> d
    int mDepthSize -> e
    int mStencilSize -> f
    int[] mValue -> i
    136:157:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    161:176:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    181:184:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.u:
    int EGL_CONTEXT_CLIENT_VERSION -> a
    92:97:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    101:102:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake -> com.badlogic.gdx.backends.android.surfaceview.v:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> a
    java.lang.Object sEglLock -> b
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread mGLThread -> e
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> c
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper mGLWrapper -> d
    int mDebugFlags -> f
    int mRenderMode -> g
    android.opengl.GLSurfaceView$Renderer mRenderer -> h
    int mSurfaceWidth -> i
    int mSurfaceHeight -> j
    boolean mHasSurface -> k
    176:178:void onMeasure(int,int) -> onMeasure
    183:187:void init() -> d
    198:199:void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper) -> setGLWrapper
    207:208:void setDebugFlags(int) -> setDebugFlags
    213:213:int getDebugFlags() -> getDebugFlags
    240:245:void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    255:259:void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    271:272:void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    282:283:void setEGLConfigChooser(int,int,int,int,int,int) -> a
    298:302:void setRenderMode(int) -> setRenderMode
    309:309:int getRenderMode() -> getRenderMode
    316:320:void requestRender() -> a
    325:329:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    335:339:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    344:349:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    354:357:void onPause() -> b
    363:376:void onResume() -> c
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.w:
    int[] mConfigSpec -> a
    420:435:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.x:
    int[] mValue -> h
    int mRedSize -> b
    int mGreenSize -> c
    int mBlueSize -> d
    int mAlphaSize -> e
    int mDepthSize -> f
    int mStencilSize -> g
    460:476:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    481:484:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.y:
    javax.microedition.khronos.egl.EGL10 mEgl -> a
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> b
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> c
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> d
    javax.microedition.khronos.egl.EGLContext mEglContext -> e
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> f
    521:541:void start() -> a
    550:580:javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> a
    586:592:boolean swap() -> b
    596:609:void finish() -> c
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread -> com.badlogic.gdx.backends.android.surfaceview.z:
    boolean mDone -> b
    boolean mPaused -> c
    boolean mHasSurface -> d
    int mWidth -> e
    int mHeight -> f
    int mRenderMode -> g
    boolean mRequestRender -> h
    android.opengl.GLSurfaceView$Renderer mRenderer -> i
    java.util.ArrayList mEventQueue -> j
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper mEglHelper -> k
    boolean mSizeChanged -> l
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> a
    645:652:void run() -> run
    655:726:void guardedRun() -> g
    729:741:boolean needToWait() -> h
    745:754:void setRenderMode(int) -> a
    763:767:void requestRender() -> a
    770:774:void surfaceCreated() -> b
    777:781:void surfaceDestroyed() -> c
    784:787:void onPause() -> d
    790:794:void onResume() -> e
    797:803:void onWindowResize(int,int) -> a
    808:817:void requestExitAndWait() -> f
    828:834:java.lang.Runnable getEvent() -> i
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.aa:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> a
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.ab:
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase -> com.badlogic.gdx.backends.android.surfaceview.ac:
    javax.microedition.khronos.opengles.GL10 mgl -> f
    javax.microedition.khronos.opengles.GL10Ext mgl10Ext -> g
    javax.microedition.khronos.opengles.GL11 mgl11 -> h
    javax.microedition.khronos.opengles.GL11Ext mgl11Ext -> i
    javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack -> j
    54:54:void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    59:59:void glColorPointer(int,int,int,int) -> glColorPointer
    63:63:void glNormalPointer(int,int,int) -> glNormalPointer
    67:67:void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    71:71:void glVertexPointer(int,int,int,int) -> glVertexPointer
    75:75:void glDrawElements(int,int,int,int) -> glDrawElements
    79:79:void glBindBuffer(int,int) -> glBindBuffer
    83:83:void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    87:87:void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    91:91:void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    95:95:void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    99:99:void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    103:103:void glGenBuffers(int,int[],int) -> glGenBuffers
    107:107:void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    111:111:void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    115:115:void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    119:119:void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    123:123:void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    127:127:void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    131:131:void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    135:135:void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    139:139:void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    143:143:void glGetFixedv(int,int[],int) -> glGetFixedv
    147:147:void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    151:151:void glGetFloatv(int,float[],int) -> glGetFloatv
    155:155:void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    159:159:void glGetLightfv(int,int,float[],int) -> glGetLightfv
    163:163:void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    167:167:void glGetLightxv(int,int,int[],int) -> glGetLightxv
    171:171:void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    175:175:void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    179:179:void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    183:183:void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    187:187:void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    191:191:void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    195:195:void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    199:199:void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    203:203:void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    207:207:void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    211:211:void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    215:215:void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    219:219:void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    223:223:void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    227:227:void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    231:231:boolean glIsBuffer(int) -> glIsBuffer
    235:235:boolean glIsEnabled(int) -> glIsEnabled
    239:239:boolean glIsTexture(int) -> glIsTexture
    243:243:void glPointParameterf(int,float) -> glPointParameterf
    247:247:void glPointParameterfv(int,float[],int) -> glPointParameterfv
    251:251:void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    255:255:void glPointParameterx(int,int) -> glPointParameterx
    259:259:void glPointParameterxv(int,int[],int) -> glPointParameterxv
    263:263:void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    267:267:void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    271:271:void glTexEnvi(int,int,int) -> glTexEnvi
    275:275:void glTexEnviv(int,int,int[],int) -> glTexEnviv
    279:279:void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    283:283:void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    287:287:void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    291:291:void glTexParameteri(int,int,int) -> glTexParameteri
    295:295:void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    299:299:void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
    305:305:void glCurrentPaletteMatrixOES(int) -> glCurrentPaletteMatrixOES
    309:309:void glLoadPaletteFromModelViewMatrixOES() -> glLoadPaletteFromModelViewMatrixOES
    313:313:void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer) -> glMatrixIndexPointerOES
    317:317:void glMatrixIndexPointerOES(int,int,int,int) -> glMatrixIndexPointerOES
    321:321:void glWeightPointerOES(int,int,int,java.nio.Buffer) -> glWeightPointerOES
    325:325:void glWeightPointerOES(int,int,int,int) -> glWeightPointerOES
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.ad:
    int mRedSize -> a
    int mGreenSize -> b
    int mBlueSize -> c
    int mAlphaSize -> d
    int mDepthSize -> e
    int mStencilSize -> f
    int mNumSamples -> g
    boolean mUseGL20 -> h
    int[] mConfigAttribs -> i
    int[] mValue -> j
    65:85:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    89:145:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    149:152:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.ae:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> a
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension -> com.badlogic.gdx.backends.android.surfaceview.af:
    int width -> a
    int height -> b
com.badlogic.gdx.files.FileHandle -> com.badlogic.gdx.c.a:
    java.io.File file -> b
    com.badlogic.gdx.Files$FileType type -> c
    78:78:java.lang.String path() -> c
    83:83:java.lang.String name() -> d
    87:90:java.lang.String extension() -> e
    111:111:com.badlogic.gdx.Files$FileType type() -> f
    117:118:java.io.File file() -> g
    124:135:java.io.InputStream read() -> a
    215:249:byte[] readBytes() -> h
    565:578:long length() -> b
    589:589:java.lang.String toString() -> toString
com.badlogic.gdx.graphics.Camera -> com.badlogic.gdx.graphics.a:
    com.badlogic.gdx.math.Vector3 position -> a
    com.badlogic.gdx.math.Vector3 direction -> b
    com.badlogic.gdx.math.Vector3 up -> c
    com.badlogic.gdx.math.Matrix4 projection -> d
    com.badlogic.gdx.math.Matrix4 view -> e
    com.badlogic.gdx.math.Matrix4 combined -> f
    com.badlogic.gdx.math.Matrix4 invProjectionView -> g
    float near -> h
    float far -> i
    float viewportWidth -> j
    float viewportHeight -> k
    com.badlogic.gdx.math.Frustum frustum -> l
    com.badlogic.gdx.math.Matrix4 tmpMat -> o
    com.badlogic.gdx.math.Vector3 tmpVec -> p
    com.badlogic.gdx.math.Vector3 right -> m
    com.badlogic.gdx.math.collision.Ray ray -> n
    void update() -> a
    165:173:void unproject(com.badlogic.gdx.math.Vector3,float,float,float,float) -> a
    184:185:void unproject(com.badlogic.gdx.math.Vector3) -> a
com.badlogic.gdx.graphics.Color -> com.badlogic.gdx.graphics.b:
    com.badlogic.gdx.graphics.Color CLEAR -> a
    com.badlogic.gdx.graphics.Color WHITE -> b
    com.badlogic.gdx.graphics.Color BLACK -> c
    com.badlogic.gdx.graphics.Color RED -> d
    com.badlogic.gdx.graphics.Color GREEN -> e
    com.badlogic.gdx.graphics.Color BLUE -> f
    com.badlogic.gdx.graphics.Color LIGHT_GRAY -> g
    com.badlogic.gdx.graphics.Color GRAY -> h
    com.badlogic.gdx.graphics.Color DARK_GRAY -> i
    com.badlogic.gdx.graphics.Color PINK -> j
    com.badlogic.gdx.graphics.Color ORANGE -> k
    com.badlogic.gdx.graphics.Color YELLOW -> l
    com.badlogic.gdx.graphics.Color MAGENTA -> m
    com.badlogic.gdx.graphics.Color CYAN -> n
    float r -> o
    float g -> p
    float b -> q
    float a -> r
    com.badlogic.gdx.graphics.Color tmp -> s
    76:81:com.badlogic.gdx.graphics.Color set(com.badlogic.gdx.graphics.Color) -> a
    137:152:void clamp() -> a
    155:159:void set(float,float,float,float) -> a
    163:166:boolean equals(java.lang.Object) -> equals
    171:175:int hashCode() -> hashCode
    179:182:java.lang.String toString() -> toString
    215:216:float toFloatBits() -> b
    223:224:int toIntBits() -> c
    256:256:int rgba8888(float,float,float,float) -> b
com.badlogic.gdx.graphics.FPSLogger -> com.badlogic.gdx.graphics.c:
    long startTime -> a
    34:38:void log() -> a
com.badlogic.gdx.graphics.GL10 -> com.badlogic.gdx.graphics.d:
    void glClientActiveTexture(int) -> a
    void glColorPointer(int,int,int,java.nio.Buffer) -> a
    void glDisableClientState(int) -> b
    void glEnableClientState(int) -> c
    void glLoadMatrixf(float[],int) -> a
    void glMatrixMode(int) -> d
    void glNormalPointer(int,int,java.nio.Buffer) -> a
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> b
    void glVertexPointer(int,int,int,java.nio.Buffer) -> c
com.badlogic.gdx.graphics.GL11 -> com.badlogic.gdx.graphics.e:
    void glBindBuffer(int,int) -> a
    void glBufferData(int,int,java.nio.Buffer,int) -> a
    void glBufferSubData(int,int,int,java.nio.Buffer) -> d
    void glDeleteBuffers(int,java.nio.IntBuffer) -> a
    void glGenBuffers(int,java.nio.IntBuffer) -> b
    void glVertexPointer(int,int,int,int) -> c
    void glColorPointer(int,int,int,int) -> a
    void glNormalPointer(int,int,int) -> a
    void glTexCoordPointer(int,int,int,int) -> b
    void glDrawElements(int,int,int,int) -> d
com.badlogic.gdx.graphics.GL20 -> com.badlogic.gdx.graphics.f:
    void glAttachShader(int,int) -> glAttachShader
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glLinkProgram(int) -> glLinkProgram
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glUniform1i(int,int) -> glUniform1i
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GLCommon -> com.badlogic.gdx.graphics.g:
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthMask(boolean) -> glDepthMask
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glPixelStorei(int,int) -> glPixelStorei
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
com.badlogic.gdx.graphics.GLU -> com.badlogic.gdx.graphics.h:
com.badlogic.gdx.graphics.Mesh -> com.badlogic.gdx.graphics.i:
    java.util.Map meshes -> a
    boolean forceVBO -> b
    com.badlogic.gdx.graphics.glutils.VertexData vertices -> c
    com.badlogic.gdx.graphics.glutils.IndexData indices -> d
    boolean autoBind -> e
    boolean isVertexArray -> f
    167:168:void setVertices(float[],int,int) -> a
    186:187:void setIndices(short[]) -> a
    248:251:void bind() -> a
    256:259:void unbind() -> b
    266:270:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    277:281:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    311:335:void render(int,int,int) -> a
    384:410:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int) -> a
    414:417:void dispose() -> c
    491:491:java.nio.ShortBuffer getIndicesBuffer() -> d
    495:499:void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh) -> a
    504:512:void invalidateAllMeshes(com.badlogic.gdx.Application) -> a
    516:517:void clearAllMeshes(com.badlogic.gdx.Application) -> b
    520:528:java.lang.String getManagedStatus() -> e
com.badlogic.gdx.graphics.Mesh$VertexDataType -> com.badlogic.gdx.graphics.j:
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray -> a
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject -> b
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData -> c
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES -> d
    68:68:com.badlogic.gdx.graphics.Mesh$VertexDataType[] values() -> values
    68:68:com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.OrthographicCamera -> com.badlogic.gdx.graphics.k:
    float zoom -> o
    com.badlogic.gdx.math.Vector3 tmp -> p
    111:112:void update() -> a
    116:127:void update(boolean) -> a
com.badlogic.gdx.graphics.Pixmap -> com.badlogic.gdx.graphics.l:
    com.badlogic.gdx.graphics.Pixmap$Blending blending -> c
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap -> a
    int color -> b
    boolean disposed -> d
    98:100:void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending) -> a
    163:164:void setColor(float,float,float,float) -> a
    174:175:void fill() -> a
    224:225:void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int) -> a
    242:243:void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int,int,int) -> a
    285:285:int getWidth() -> b
    290:290:int getHeight() -> d
    295:298:void dispose() -> c
    321:321:int getGLFormat() -> e
    328:328:int getGLInternalFormat() -> f
    335:335:int getGLType() -> g
    344:345:java.nio.ByteBuffer getPixels() -> h
    350:350:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    355:355:com.badlogic.gdx.graphics.Pixmap$Blending getBlending() -> j
com.badlogic.gdx.graphics.Pixmap$Blending -> com.badlogic.gdx.graphics.m:
    com.badlogic.gdx.graphics.Pixmap$Blending None -> a
    com.badlogic.gdx.graphics.Pixmap$Blending SourceOver -> b
    com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES -> c
    76:76:com.badlogic.gdx.graphics.Pixmap$Blending[] values() -> values
    76:76:com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Format -> com.badlogic.gdx.graphics.n:
    com.badlogic.gdx.graphics.Pixmap$Format Alpha -> a
    com.badlogic.gdx.graphics.Pixmap$Format Intensity -> b
    com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha -> c
    com.badlogic.gdx.graphics.Pixmap$Format RGB565 -> d
    com.badlogic.gdx.graphics.Pixmap$Format RGBA4444 -> e
    com.badlogic.gdx.graphics.Pixmap$Format RGB888 -> f
    com.badlogic.gdx.graphics.Pixmap$Format RGBA8888 -> g
    com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES -> h
    49:49:com.badlogic.gdx.graphics.Pixmap$Format[] values() -> values
    49:49:com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String) -> valueOf
    53:60:int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    64:70:com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int) -> a
com.badlogic.gdx.graphics.PixmapIO -> com.badlogic.gdx.graphics.o:
    48:48:com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.PixmapIO$CIM -> com.badlogic.gdx.graphics.p:
    byte[] writeBuffer -> a
    byte[] readBuffer -> b
    110:141:com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.Texture -> com.badlogic.gdx.graphics.q:
    boolean enforcePotImages -> h
    com.badlogic.gdx.assets.AssetManager assetManager -> i
    java.util.Map managedTextures -> a
    java.nio.IntBuffer buffer -> j
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> c
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> d
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> e
    int glHandle -> f
    com.badlogic.gdx.graphics.TextureData data -> g
    158:161:void create(com.badlogic.gdx.graphics.TextureData) -> b
    164:167:int createGLHandle() -> a
    171:199:void load(com.badlogic.gdx.graphics.TextureData) -> a
    202:230:void uploadImageData(com.badlogic.gdx.graphics.Pixmap) -> a
    235:238:void reload() -> m
    243:244:void bind() -> b
    270:270:int getWidth() -> d
    275:275:int getHeight() -> e
    279:279:com.badlogic.gdx.graphics.Texture$TextureFilter getMinFilter() -> f
    283:283:com.badlogic.gdx.graphics.Texture$TextureFilter getMagFilter() -> g
    287:287:com.badlogic.gdx.graphics.Texture$TextureWrap getUWrap() -> h
    291:291:com.badlogic.gdx.graphics.Texture$TextureWrap getVWrap() -> i
    295:295:com.badlogic.gdx.graphics.TextureData getTextureData() -> j
    304:304:int getTextureObjectHandle() -> k
    312:317:void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> a
    320:325:void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> a
    333:340:void dispose() -> c
    348:352:void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Texture) -> a
    356:357:void clearAllTextures(com.badlogic.gdx.Application) -> a
    361:417:void invalidateAllTextures(com.badlogic.gdx.Application) -> b
    428:435:java.lang.String getManagedStatus() -> l
com.badlogic.gdx.graphics.Texture$1 -> com.badlogic.gdx.graphics.r:
    int val$refCount -> a
    404:405:void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> a
com.badlogic.gdx.graphics.Texture$TextureFilter -> com.badlogic.gdx.graphics.s:
    com.badlogic.gdx.graphics.Texture$TextureFilter Nearest -> a
    com.badlogic.gdx.graphics.Texture$TextureFilter Linear -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMap -> c
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear -> g
    int glEnum -> h
    com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES -> i
    74:74:com.badlogic.gdx.graphics.Texture$TextureFilter[] values() -> values
    74:74:com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String) -> valueOf
    90:90:int getGLEnum() -> a
com.badlogic.gdx.graphics.Texture$TextureWrap -> com.badlogic.gdx.graphics.t:
    com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge -> a
    com.badlogic.gdx.graphics.Texture$TextureWrap Repeat -> b
    int glEnum -> c
    com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES -> d
    94:94:com.badlogic.gdx.graphics.Texture$TextureWrap[] values() -> values
    94:94:com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String) -> valueOf
    104:104:int getGLEnum() -> a
com.badlogic.gdx.graphics.TextureData -> com.badlogic.gdx.graphics.u:
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    boolean isPrepared() -> b
    void prepare() -> c
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    boolean disposePixmap() -> e
    void consumeCompressedData() -> f
    int getWidth() -> g
    int getHeight() -> h
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    boolean useMipMaps() -> j
    boolean isManaged() -> k
com.badlogic.gdx.graphics.TextureData$TextureDataType -> com.badlogic.gdx.graphics.v:
    com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap -> a
    com.badlogic.gdx.graphics.TextureData$TextureDataType Compressed -> b
    com.badlogic.gdx.graphics.TextureData$TextureDataType Float -> c
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] $VALUES -> d
    41:41:com.badlogic.gdx.graphics.TextureData$TextureDataType[] values() -> values
    41:41:com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.VertexAttribute -> com.badlogic.gdx.graphics.w:
    int usage -> a
    int numComponents -> b
    int offset -> c
    java.lang.String alias -> d
    73:77:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.VertexAttributes -> com.badlogic.gdx.graphics.x:
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> b
    int vertexSize -> a
    74:84:int calculateOffsets() -> b
    88:112:void checkValidity() -> c
    116:116:int size() -> a
    122:122:com.badlogic.gdx.graphics.VertexAttribute get(int) -> a
    126:141:java.lang.String toString() -> toString
    146:152:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap -> com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    long basePtr -> a
    int width -> b
    int height -> c
    int format -> d
    java.nio.ByteBuffer pixelPtr -> e
    long[] nativeData -> f
    103:104:void dispose() -> c
    107:108:void clear(int) -> a
    139:140:void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int) -> a
    144:145:void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int,int,int) -> a
    164:164:java.nio.ByteBuffer getPixels() -> a
    168:168:int getHeight() -> b
    172:172:int getWidth() -> d
    176:176:int getFormat() -> e
    180:192:int getGLInternalFormat() -> f
    197:197:int getGLFormat() -> g
    201:212:int getGLType() -> h
    java.nio.ByteBuffer load(long[],byte[],int,int,int) -> load
    java.nio.ByteBuffer newPixmap(long[],int,int,int) -> newPixmap
    void free(long) -> free
    void clear(long,int) -> clear
    void drawPixmap(long,long,int,int,int,int,int,int,int,int) -> drawPixmap
    void setBlend(int) -> setBlend
    void setScale(int) -> setScale
com.badlogic.gdx.graphics.g2d.SpriteBatch -> com.badlogic.gdx.graphics.g2d.a:
    com.badlogic.gdx.graphics.Mesh mesh -> e
    com.badlogic.gdx.graphics.Mesh[] buffers -> f
    com.badlogic.gdx.graphics.Texture lastTexture -> g
    float invTexWidth -> h
    float invTexHeight -> i
    int idx -> j
    int currBufferIdx -> k
    float[] vertices -> l
    com.badlogic.gdx.math.Matrix4 transformMatrix -> m
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> n
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> o
    boolean drawing -> p
    boolean blendingDisabled -> q
    int blendSrcFunc -> r
    int blendDstFunc -> s
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> t
    boolean ownsShader -> u
    float color -> a
    com.badlogic.gdx.graphics.Color tempColor -> v
    int renderCalls -> b
    int totalRenderCalls -> c
    int maxSpritesInBatch -> d
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> w
    207:236:com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> a
    244:261:void begin() -> b
    266:284:void end() -> d
    293:295:void setColor(float,float,float,float) -> a
    735:773:void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> a
    781:891:void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> a
    1031:1032:void flush() -> e
    1035:1067:void renderMesh() -> h
    1097:1100:void dispose() -> c
    1113:1113:com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> f
    1121:1124:void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> a
    1131:1134:void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> b
    1137:1153:void setupMatrices() -> i
    1156:1160:void switchTexture(com.badlogic.gdx.graphics.Texture) -> a
    1195:1195:boolean isBlendingEnabled() -> g
com.badlogic.gdx.graphics.g2d.TextureRegion -> com.badlogic.gdx.graphics.g2d.b:
    com.badlogic.gdx.graphics.Texture texture -> a
    float u -> b
    float v -> c
    float u2 -> d
    float v2 -> e
    int regionWidth -> f
    int regionHeight -> g
    82:87:void setRegion(int,int,int,int) -> a
    90:96:void setRegion(float,float,float,float) -> a
    172:172:int getRegionWidth() -> a
    181:181:int getRegionHeight() -> b
com.badlogic.gdx.graphics.glutils.ETC1 -> com.badlogic.gdx.graphics.glutils.ETC1:
    int PKM_HEADER_SIZE -> a
    int ETC1_RGB8_OES -> b
    138:140:int getPixelSize(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    170:187:com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format) -> a
    int getWidthPKM(java.nio.ByteBuffer,int) -> getWidthPKM
    int getHeightPKM(java.nio.ByteBuffer,int) -> getHeightPKM
    boolean isValidPKM(java.nio.ByteBuffer,int) -> isValidPKM
    void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> decodeImage
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data -> com.badlogic.gdx.graphics.glutils.a:
    int width -> a
    int height -> b
    java.nio.ByteBuffer compressedData -> c
    int dataOffset -> d
    89:89:boolean hasPKMHeader() -> a
    123:124:void dispose() -> c
    127:132:java.lang.String toString() -> toString
com.badlogic.gdx.graphics.glutils.ETC1TextureData -> com.badlogic.gdx.graphics.glutils.b:
    com.badlogic.gdx.files.FileHandle file -> a
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data -> b
    boolean useMipMaps -> c
    int width -> d
    int height -> e
    boolean isPrepared -> f
    53:53:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    58:58:boolean isPrepared() -> b
    63:71:void prepare() -> c
    75:92:void consumeCompressedData() -> f
    96:96:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    101:101:boolean disposePixmap() -> e
    106:106:int getWidth() -> g
    111:111:int getHeight() -> h
    116:116:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    121:121:boolean useMipMaps() -> j
    126:126:boolean isManaged() -> k
com.badlogic.gdx.graphics.glutils.FileTextureData -> com.badlogic.gdx.graphics.glutils.c:
    boolean copyToPOT -> a
    com.badlogic.gdx.files.FileHandle file -> b
    int width -> c
    int height -> d
    com.badlogic.gdx.graphics.Pixmap$Format format -> e
    com.badlogic.gdx.graphics.Pixmap pixmap -> f
    boolean useMipMaps -> g
    boolean isPrepared -> h
    54:54:boolean isPrepared() -> b
    59:70:void prepare() -> c
    73:85:com.badlogic.gdx.graphics.Pixmap ensurePot(com.badlogic.gdx.graphics.Pixmap) -> a
    90:94:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    99:99:boolean disposePixmap() -> e
    104:104:int getWidth() -> g
    109:109:int getHeight() -> h
    114:114:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    119:119:boolean useMipMaps() -> j
    124:124:boolean isManaged() -> k
    133:133:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    138:138:void consumeCompressedData() -> f
com.badlogic.gdx.graphics.glutils.FrameBuffer -> com.badlogic.gdx.graphics.glutils.d:
    java.util.Map buffers -> f
    com.badlogic.gdx.graphics.Texture colorTexture -> a
    int defaultFramebufferHandle -> g
    boolean defaultFramebufferHandleInitialized -> h
    int framebufferHandle -> i
    int depthbufferHandle -> j
    int width -> b
    int height -> c
    boolean hasDepth -> d
    com.badlogic.gdx.graphics.Pixmap$Format format -> e
    106:109:void setupTexture() -> a
    112:183:void build() -> d
    187:204:void dispose() -> c
    228:235:void invalidateAllFrameBuffers(com.badlogic.gdx.Application) -> a
    238:239:void clearAllFrameBuffers(com.badlogic.gdx.Application) -> b
    242:250:java.lang.String getManagedStatus() -> b
com.badlogic.gdx.graphics.glutils.IndexArray -> com.badlogic.gdx.graphics.glutils.e:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    43:43:int getNumIndices() -> a
    64:69:void setIndices(short[],int,int) -> a
    78:78:java.nio.ShortBuffer getBuffer() -> b
    83:83:void bind() -> d
    87:87:void unbind() -> e
    91:91:void invalidate() -> f
    95:96:void dispose() -> c
com.badlogic.gdx.graphics.glutils.IndexBufferObject -> com.badlogic.gdx.graphics.glutils.f:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    96:103:int createBufferObject() -> g
    109:109:int getNumIndices() -> a
    130:147:void setIndices(short[],int,int) -> a
    156:157:java.nio.ShortBuffer getBuffer() -> b
    162:182:void bind() -> d
    186:192:void unbind() -> e
    196:198:void invalidate() -> f
    202:220:void dispose() -> c
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.g:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    96:110:int createBufferObject() -> g
    115:115:int getNumIndices() -> a
    136:158:void setIndices(short[],int,int) -> a
    167:168:java.nio.ShortBuffer getBuffer() -> b
    173:197:void bind() -> d
    201:207:void unbind() -> e
    211:213:void invalidate() -> f
    217:234:void dispose() -> c
com.badlogic.gdx.graphics.glutils.IndexData -> com.badlogic.gdx.graphics.glutils.h:
    int getNumIndices() -> a
    void setIndices(short[],int,int) -> a
    java.nio.ShortBuffer getBuffer() -> b
    void bind() -> d
    void unbind() -> e
    void invalidate() -> f
    void dispose() -> c
com.badlogic.gdx.graphics.glutils.MipMapGenerator -> com.badlogic.gdx.graphics.glutils.i:
    boolean useHWMipMap -> a
    41:54:void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> a
    57:61:void generateMipMapGLES20(com.badlogic.gdx.graphics.Pixmap,boolean) -> a
    64:81:void generateMipMapDesktop(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> b
    84:107:void generateMipMapCPU(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> c
com.badlogic.gdx.graphics.glutils.PixmapTextureData -> com.badlogic.gdx.graphics.glutils.j:
    com.badlogic.gdx.graphics.Pixmap pixmap -> a
    com.badlogic.gdx.graphics.Pixmap$Format format -> b
    boolean useMipMaps -> c
    boolean disposePixmap -> d
    39:39:boolean disposePixmap() -> e
    44:44:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    49:49:int getWidth() -> g
    54:54:int getHeight() -> h
    59:59:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    64:64:boolean useMipMaps() -> j
    69:69:boolean isManaged() -> k
    74:74:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    79:79:void consumeCompressedData() -> f
    84:84:boolean isPrepared() -> b
    89:89:void prepare() -> c
com.badlogic.gdx.graphics.glutils.ShaderProgram -> com.badlogic.gdx.graphics.glutils.k:
    boolean pedantic -> a
    com.badlogic.gdx.utils.ObjectMap shaders -> e
    java.lang.String log -> f
    boolean isCompiled -> g
    com.badlogic.gdx.utils.ObjectIntMap uniforms -> h
    com.badlogic.gdx.utils.ObjectIntMap uniformTypes -> i
    java.lang.String[] uniformNames -> j
    com.badlogic.gdx.utils.ObjectIntMap attributes -> k
    com.badlogic.gdx.utils.ObjectIntMap attributeTypes -> l
    java.lang.String[] attributeNames -> m
    int program -> n
    int vertexShaderHandle -> o
    int fragmentShaderHandle -> p
    java.nio.FloatBuffer matrix -> q
    java.lang.String vertexShaderSource -> r
    java.lang.String fragmentShaderSource -> s
    boolean invalidated -> t
    java.nio.ByteBuffer buffer -> u
    java.nio.FloatBuffer floatBuffer -> v
    java.nio.IntBuffer intBuffer -> w
    int refCount -> x
    java.nio.IntBuffer intbuf -> b
    java.nio.IntBuffer params -> c
    java.nio.IntBuffer type -> d
    173:188:void compileShaders(java.lang.String,java.lang.String) -> a
    191:212:int loadShader(int,java.lang.String) -> a
    216:239:int linkProgram() -> g
    247:255:java.lang.String getLog() -> a
    261:261:boolean isCompiled() -> b
    265:273:int fetchAttributeLocation(java.lang.String) -> c
    277:286:int fetchUniformLocation(java.lang.String) -> d
    295:299:void setUniformi(java.lang.String,int) -> a
    527:528:void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4) -> a
    537:543:void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4,boolean) -> a
    645:650:void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer) -> a
    669:674:void setVertexAttribute(java.lang.String,int,int,boolean,int,int) -> a
    685:688:void begin() -> d
    693:695:void end() -> e
    699:705:void dispose() -> c
    711:716:void disableVertexAttribute(java.lang.String) -> a
    728:733:void enableVertexAttribute(java.lang.String) -> b
    742:746:void checkManaged() -> h
    749:753:void addManagedShader(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    758:767:void invalidateAllShaderPrograms(com.badlogic.gdx.Application) -> a
    770:771:void clearAllShaderPrograms(com.badlogic.gdx.Application) -> b
    774:782:java.lang.String getManagedStatus() -> f
    810:826:void fetchUniforms() -> i
    829:845:void fetchAttributes() -> j
com.badlogic.gdx.graphics.glutils.VertexArray -> com.badlogic.gdx.graphics.glutils.l:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> a
    java.nio.FloatBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    boolean isBound -> d
    71:72:void dispose() -> c
    94:97:void setVertices(float[],int,int) -> a
    101:146:void bind() -> a
    150:178:void unbind() -> b
    181:197:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    203:210:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
com.badlogic.gdx.graphics.glutils.VertexBufferObject -> com.badlogic.gdx.graphics.glutils.m:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isStatic -> f
    int usage -> g
    boolean isDirty -> h
    boolean isBound -> i
    94:98:int createBufferObject() -> e
    128:143:void setVertices(float[],int,int) -> a
    148:196:void bind() -> a
    202:225:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    230:259:void unbind() -> b
    265:273:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    277:279:void invalidate() -> d
    284:302:void dispose() -> c
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.n:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isDirect -> f
    boolean isStatic -> g
    int usage -> h
    boolean isDirty -> i
    boolean isBound -> j
    95:106:int createBufferObject() -> d
    136:159:void setVertices(float[],int,int) -> a
    164:214:void bind() -> a
    220:245:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    250:279:void unbind() -> b
    285:293:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    304:321:void dispose() -> c
com.badlogic.gdx.graphics.glutils.VertexData -> com.badlogic.gdx.graphics.glutils.o:
    void setVertices(float[],int,int) -> a
    void bind() -> a
    void unbind() -> b
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    void dispose() -> c
com.badlogic.gdx.math.Frustum -> com.badlogic.gdx.math.a:
    com.badlogic.gdx.math.Vector3[] clipSpacePlanePoints -> a
    float[] clipSpacePlanePointsArray -> b
    com.badlogic.gdx.math.Plane[] planes -> c
    com.badlogic.gdx.math.Vector3[] planePoints -> d
    float[] planePointsArray -> e
    57:72:void update(com.badlogic.gdx.math.Matrix4) -> a
com.badlogic.gdx.math.Interpolation -> com.badlogic.gdx.math.b:
    com.badlogic.gdx.math.Interpolation linear -> a
    com.badlogic.gdx.math.Interpolation fade -> b
    com.badlogic.gdx.math.Interpolation$Pow pow2 -> c
    com.badlogic.gdx.math.Interpolation$PowIn pow2In -> d
    com.badlogic.gdx.math.Interpolation$PowOut pow2Out -> e
    com.badlogic.gdx.math.Interpolation$Pow pow3 -> f
    com.badlogic.gdx.math.Interpolation$PowIn pow3In -> g
    com.badlogic.gdx.math.Interpolation$PowOut pow3Out -> h
    com.badlogic.gdx.math.Interpolation$Pow pow4 -> i
    com.badlogic.gdx.math.Interpolation$PowIn pow4In -> j
    com.badlogic.gdx.math.Interpolation$PowOut pow4Out -> k
    com.badlogic.gdx.math.Interpolation$Pow pow5 -> l
    com.badlogic.gdx.math.Interpolation$PowIn pow5In -> m
    com.badlogic.gdx.math.Interpolation$PowOut pow5Out -> n
    com.badlogic.gdx.math.Interpolation sine -> o
    com.badlogic.gdx.math.Interpolation sineIn -> p
    com.badlogic.gdx.math.Interpolation sineOut -> q
    com.badlogic.gdx.math.Interpolation exp10 -> r
    com.badlogic.gdx.math.Interpolation exp10In -> s
    com.badlogic.gdx.math.Interpolation exp10Out -> t
    com.badlogic.gdx.math.Interpolation exp5 -> u
    com.badlogic.gdx.math.Interpolation exp5In -> v
    com.badlogic.gdx.math.Interpolation exp5Out -> w
    com.badlogic.gdx.math.Interpolation circle -> x
    com.badlogic.gdx.math.Interpolation circleIn -> y
    com.badlogic.gdx.math.Interpolation circleOut -> z
    com.badlogic.gdx.math.Interpolation$Elastic elastic -> A
    com.badlogic.gdx.math.Interpolation$Elastic elasticIn -> B
    com.badlogic.gdx.math.Interpolation$Elastic elasticOut -> C
    com.badlogic.gdx.math.Interpolation swing -> D
    com.badlogic.gdx.math.Interpolation swingIn -> E
    com.badlogic.gdx.math.Interpolation swingOut -> F
    com.badlogic.gdx.math.Interpolation bounce -> G
    com.badlogic.gdx.math.Interpolation bounceIn -> H
    com.badlogic.gdx.math.Interpolation bounceOut -> I
    float apply(float) -> a
com.badlogic.gdx.math.Interpolation$1 -> com.badlogic.gdx.math.c:
    30:30:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$2 -> com.badlogic.gdx.math.d:
    36:36:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$3 -> com.badlogic.gdx.math.e:
    58:58:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$4 -> com.badlogic.gdx.math.f:
    64:64:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$5 -> com.badlogic.gdx.math.g:
    70:70:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$6 -> com.badlogic.gdx.math.h:
    84:90:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$7 -> com.badlogic.gdx.math.i:
    96:96:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$8 -> com.badlogic.gdx.math.j:
    102:103:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Bounce -> com.badlogic.gdx.math.k:
    246:248:float out(float) -> b
    252:253:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$BounceIn -> com.badlogic.gdx.math.l:
    336:336:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$BounceOut -> com.badlogic.gdx.math.m:
    float[] widths -> J
    float[] heights -> K
    310:322:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Elastic -> com.badlogic.gdx.math.n:
    float value -> J
    float power -> K
    203:209:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ElasticIn -> com.badlogic.gdx.math.o:
    219:219:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ElasticOut -> com.badlogic.gdx.math.p:
    229:230:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Exp -> com.badlogic.gdx.math.q:
    float value -> J
    float power -> K
    float min -> L
    float scale -> M
    167:168:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ExpIn -> com.badlogic.gdx.math.r:
    178:178:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ExpOut -> com.badlogic.gdx.math.s:
    188:188:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Pow -> com.badlogic.gdx.math.t:
    int power -> J
    129:130:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$PowIn -> com.badlogic.gdx.math.u:
    140:140:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$PowOut -> com.badlogic.gdx.math.v:
    150:150:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Swing -> com.badlogic.gdx.math.w:
    float scale -> J
    350:356:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$SwingIn -> com.badlogic.gdx.math.x:
    float scale -> J
    381:381:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$SwingOut -> com.badlogic.gdx.math.y:
    float scale -> J
    368:369:float apply(float) -> a
com.badlogic.gdx.math.MathUtils -> com.badlogic.gdx.math.z:
    int ATAN2_DIM -> a
    float INV_ATAN2_DIM_MINUS_1 -> c
    java.util.Random random -> b
    double BIG_ENOUGH_CEIL -> d
    66:66:float sin(float) -> a
    71:71:float cos(float) -> b
    76:76:float sinDeg(float) -> c
    81:81:float cosDeg(float) -> d
    137:137:int random(int) -> a
    167:174:int nextPowerOfTwo(int) -> b
    178:178:boolean isPowerOfTwo(int) -> c
    196:198:float clamp(float,float,float) -> a
com.badlogic.gdx.math.MathUtils$Cos -> com.badlogic.gdx.math.aa:
    float[] table -> a
com.badlogic.gdx.math.MathUtils$Sin -> com.badlogic.gdx.math.ab:
    float[] table -> a
com.badlogic.gdx.math.Matrix3 -> com.badlogic.gdx.math.ac:
    float[] val -> a
    float[] tmp -> b
    52:61:com.badlogic.gdx.math.Matrix3 idt() -> a
    72:94:com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3) -> a
    125:137:com.badlogic.gdx.math.Matrix3 setToTranslation(float,float) -> a
    178:178:java.lang.String toString() -> toString
    223:224:com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3) -> b
    257:259:com.badlogic.gdx.math.Matrix3 trn(float,float) -> b
    277:289:com.badlogic.gdx.math.Matrix3 translate(float,float) -> c
    317:334:com.badlogic.gdx.math.Matrix3 rotate(float) -> a
    343:353:com.badlogic.gdx.math.Matrix3 scale(float,float) -> d
    434:455:void mul(float[],float[]) -> a
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.math.Matrix4:
    float[] tmp -> a
    float[] val -> b
    com.badlogic.gdx.math.Quaternion quat -> c
    com.badlogic.gdx.math.Vector3 tmpV -> d
    com.badlogic.gdx.math.Vector3 l_vez -> e
    com.badlogic.gdx.math.Vector3 l_vex -> f
    com.badlogic.gdx.math.Vector3 l_vey -> g
    com.badlogic.gdx.math.Vector3 tmpVec -> h
    com.badlogic.gdx.math.Matrix4 tmpMat -> i
    com.badlogic.gdx.math.Vector3 right -> j
    com.badlogic.gdx.math.Vector3 tmpForward -> k
    com.badlogic.gdx.math.Vector3 tmpUp -> l
    84:84:com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> a
    94:95:com.badlogic.gdx.math.Matrix4 set(float[]) -> a
    203:204:com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> b
    234:250:com.badlogic.gdx.math.Matrix4 idt() -> a
    374:375:com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float) -> a
    405:431:com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float) -> a
    440:444:com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3) -> a
    576:591:com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    604:608:com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    626:626:java.lang.String toString() -> toString
    642:658:com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3) -> a
    void mul(float[],float[]) -> mul
    void prj(float[],float[],int,int,int) -> prj
    boolean inv(float[]) -> inv
com.badlogic.gdx.math.Plane -> com.badlogic.gdx.math.ad:
    com.badlogic.gdx.math.Vector3 normal -> a
    float d -> b
    73:78:void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    176:176:java.lang.String toString() -> toString
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.math.ae:
    com.badlogic.gdx.math.Quaternion tmp1 -> e
    com.badlogic.gdx.math.Quaternion tmp2 -> f
    float x -> a
    float y -> b
    float z -> c
    float w -> d
    71:75:com.badlogic.gdx.math.Quaternion set(float,float,float,float) -> a
    109:109:java.lang.String toString() -> toString
    249:250:com.badlogic.gdx.math.Quaternion idt() -> a
    398:405:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.Rectangle -> com.badlogic.gdx.math.af:
    com.badlogic.gdx.math.Rectangle tmp -> a
    com.badlogic.gdx.math.Rectangle tmp2 -> b
    float x -> c
    float y -> d
    float width -> e
    float height -> f
    158:158:java.lang.String toString() -> toString
com.badlogic.gdx.math.Vector2 -> com.badlogic.gdx.math.ag:
    com.badlogic.gdx.math.Vector2 tmp -> a
    com.badlogic.gdx.math.Vector2 tmp2 -> b
    com.badlogic.gdx.math.Vector2 tmp3 -> c
    com.badlogic.gdx.math.Vector2 X -> d
    com.badlogic.gdx.math.Vector2 Y -> e
    com.badlogic.gdx.math.Vector2 Zero -> f
    float x -> g
    float y -> h
    88:90:com.badlogic.gdx.math.Vector2 set(float,float) -> a
    202:202:java.lang.String toString() -> toString
    295:299:int hashCode() -> hashCode
    304:310:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.math.ah:
    float x -> a
    float y -> b
    float z -> c
    com.badlogic.gdx.math.Vector3 tmp -> d
    com.badlogic.gdx.math.Vector3 tmp2 -> e
    com.badlogic.gdx.math.Vector3 tmp3 -> f
    com.badlogic.gdx.math.Vector3 X -> g
    com.badlogic.gdx.math.Vector3 Y -> h
    com.badlogic.gdx.math.Vector3 Z -> i
    com.badlogic.gdx.math.Vector3 Zero -> j
    com.badlogic.gdx.math.Matrix4 tmpMat -> k
    84:87:com.badlogic.gdx.math.Vector3 set(float,float,float) -> a
    95:95:com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3) -> a
    116:116:com.badlogic.gdx.math.Vector3 tmp() -> a
    124:124:com.badlogic.gdx.math.Vector3 tmp2() -> b
    140:140:com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3) -> b
    149:149:com.badlogic.gdx.math.Vector3 add(float,float,float) -> b
    164:164:com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3) -> c
    174:174:com.badlogic.gdx.math.Vector3 sub(float,float,float) -> c
    190:190:com.badlogic.gdx.math.Vector3 mul(float) -> a
    216:216:com.badlogic.gdx.math.Vector3 div(float) -> b
    229:229:float len() -> c
    261:265:com.badlogic.gdx.math.Vector3 nor() -> d
    272:272:float dot(com.badlogic.gdx.math.Vector3) -> d
    279:279:com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3) -> e
    307:309:com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4) -> a
    392:392:java.lang.String toString() -> toString
    447:452:int hashCode() -> hashCode
    458:465:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.math.ai:
    float[] values -> a
    int added_values -> b
    int last_value -> c
    float mean -> d
    boolean dirty -> e
    41:41:boolean hasEnoughData() -> a
    46:51:void clear() -> b
    57:61:void addValue(float) -> a
    67:78:float getMean() -> c
com.badlogic.gdx.math.collision.Ray -> com.badlogic.gdx.math.a.a:
    com.badlogic.gdx.math.Vector3 origin -> a
    com.badlogic.gdx.math.Vector3 direction -> b
    com.badlogic.gdx.math.Vector3 tmp -> c
    70:70:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Action -> com.badlogic.gdx.d.a.a:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> a
    com.badlogic.gdx.utils.Pool pool -> b
    boolean act(float) -> a
    39:39:void restart() -> a
    55:63:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    72:73:void reset() -> b
    82:83:void setPool(com.badlogic.gdx.utils.Pool) -> a
    86:90:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Actor -> com.badlogic.gdx.d.a.b:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> a
    com.badlogic.gdx.scenes.scene2d.Group parent -> b
    com.badlogic.gdx.utils.DelayedRemovalArray listeners -> c
    com.badlogic.gdx.utils.DelayedRemovalArray captureListeners -> d
    com.badlogic.gdx.utils.Array actions -> e
    java.lang.String name -> f
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> g
    boolean visible -> h
    float x -> i
    float y -> j
    float width -> k
    float height -> l
    float originX -> m
    float originY -> n
    float scaleX -> o
    float scaleY -> p
    float rotation -> q
    com.badlogic.gdx.graphics.Color color -> r
    63:63:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    70:79:void act(float) -> a
    90:127:boolean fire(com.badlogic.gdx.scenes.scene2d.Event) -> a
    137:162:boolean notify(com.badlogic.gdx.scenes.scene2d.Event,boolean) -> a
    175:176:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> a
    182:183:boolean remove() -> a
    218:220:void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    232:235:void clearActions() -> b
    239:239:com.badlogic.gdx.scenes.scene2d.Stage getStage() -> c
    245:246:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> a
    276:276:com.badlogic.gdx.scenes.scene2d.Group getParent() -> d
    282:283:void setParent(com.badlogic.gdx.scenes.scene2d.Group) -> a
    286:286:com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> e
    291:292:void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> a
    295:295:boolean isVisible() -> f
    304:304:float getX() -> g
    308:309:void setX(float) -> b
    312:312:float getY() -> h
    316:317:void setY(float) -> c
    321:323:void setPosition(float,float) -> a
    326:328:void translate(float,float) -> b
    331:331:float getWidth() -> i
    335:336:void setWidth(float) -> d
    339:339:float getHeight() -> j
    343:344:void setHeight(float) -> e
    383:383:float getOriginX() -> k
    387:388:void setOriginX(float) -> f
    391:391:float getOriginY() -> l
    395:396:void setOriginY(float) -> g
    400:402:void setOrigin(float,float) -> c
    405:405:float getScaleX() -> m
    409:410:void setScaleX(float) -> h
    413:413:float getScaleY() -> n
    417:418:void setScaleY(float) -> i
    422:424:void setScale(float) -> j
    428:430:void setScale(float,float) -> d
    445:445:float getRotation() -> o
    449:450:void setRotation(float) -> k
    467:467:com.badlogic.gdx.graphics.Color getColor() -> p
    566:640:com.badlogic.gdx.math.Vector2 parentToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> a
    644:650:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Event -> com.badlogic.gdx.d.a.c:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> a
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> b
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> c
    boolean capture -> d
    boolean bubbles -> e
    boolean handled -> f
    boolean stopped -> g
    boolean cancelled -> h
    37:38:void handle() -> a
    56:64:void reset() -> b
    68:68:com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> c
    72:73:void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    81:82:void setListenerActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    85:85:boolean getBubbles() -> d
    96:96:boolean isHandled() -> e
    101:101:boolean isStopped() -> f
    106:106:boolean isCancelled() -> g
    110:111:void setCapture(boolean) -> a
    120:121:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> a
    125:125:com.badlogic.gdx.scenes.scene2d.Stage getStage() -> h
com.badlogic.gdx.scenes.scene2d.EventListener -> com.badlogic.gdx.d.a.d:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> a
com.badlogic.gdx.scenes.scene2d.Group -> com.badlogic.gdx.d.a.e:
    com.badlogic.gdx.utils.SnapshotArray children -> a
    com.badlogic.gdx.math.Matrix3 localTransform -> b
    com.badlogic.gdx.math.Matrix3 worldTransform -> c
    com.badlogic.gdx.math.Matrix4 batchTransform -> d
    com.badlogic.gdx.math.Matrix4 oldBatchTransform -> e
    boolean transform -> f
    com.badlogic.gdx.math.Rectangle cullingArea -> g
    com.badlogic.gdx.math.Vector2 point -> h
    45:50:void act(float) -> a
    55:58:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    66:134:void drawChildren(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> b
    139:141:void applyTransform(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.math.Matrix4) -> a
    145:177:com.badlogic.gdx.math.Matrix4 computeTransform() -> q
    183:184:void resetTransform(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    193:202:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> a
    207:207:void childrenChanged() -> r
    211:216:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    260:266:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    271:280:void clear() -> s
    298:302:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> a
    324:324:com.badlogic.gdx.utils.SnapshotArray getChildren() -> t
com.badlogic.gdx.scenes.scene2d.InputEvent -> com.badlogic.gdx.d.a.f:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type type -> a
    float stageX -> b
    float stageY -> c
    int pointer -> d
    int button -> e
    int keyCode -> f
    char character -> g
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> h
    31:34:void reset() -> b
    42:43:void setStageX(float) -> a
    51:52:void setStageY(float) -> b
    56:56:com.badlogic.gdx.scenes.scene2d.InputEvent$Type getType() -> i
    60:61:void setType(com.badlogic.gdx.scenes.scene2d.InputEvent$Type) -> a
    66:66:int getPointer() -> j
    70:71:void setPointer(int) -> a
    76:76:int getButton() -> k
    80:81:void setButton(int) -> b
    89:90:void setKeyCode(int) -> c
    98:99:void setCharacter(char) -> a
    117:118:void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> c
    121:121:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.InputEvent$Type -> com.badlogic.gdx.d.a.g:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDown -> a
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchUp -> b
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDragged -> c
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type mouseMoved -> d
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type enter -> e
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type exit -> f
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type scrolled -> g
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyDown -> h
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyUp -> i
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyTyped -> j
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] $VALUES -> k
    124:124:com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] values() -> values
    124:124:com.badlogic.gdx.scenes.scene2d.InputEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.Stage -> com.badlogic.gdx.d.a.h:
    float width -> a
    float height -> b
    float gutterWidth -> c
    float gutterHeight -> d
    float centerX -> e
    float centerY -> f
    com.badlogic.gdx.graphics.Camera camera -> g
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> h
    boolean ownsBatch -> i
    com.badlogic.gdx.scenes.scene2d.Group root -> j
    com.badlogic.gdx.math.Vector2 stageCoords -> k
    com.badlogic.gdx.scenes.scene2d.Actor[] pointerOverActors -> l
    boolean[] pointerTouched -> m
    int[] pointerScreenX -> n
    int[] pointerScreenY -> o
    int mouseScreenX -> p
    int mouseScreenY -> q
    com.badlogic.gdx.scenes.scene2d.Actor mouseOverActor -> r
    com.badlogic.gdx.scenes.scene2d.Actor keyboardFocus -> s
    com.badlogic.gdx.scenes.scene2d.Actor scrollFocus -> t
    com.badlogic.gdx.utils.SnapshotArray touchFocuses -> u
    94:102:void initialize(float,float,boolean) -> c
    110:145:void setViewport(float,float,boolean) -> a
    148:154:void draw() -> a
    166:195:void act(float) -> a
    199:221:com.badlogic.gdx.scenes.scene2d.Actor fireEnterAndExit(com.badlogic.gdx.scenes.scene2d.Actor,int,int,int) -> a
    226:246:boolean touchDown(int,int,int,int) -> a
    252:279:boolean touchDragged(int,int,int) -> a
    285:316:boolean touchUp(int,int,int,int) -> b
    364:372:boolean keyDown(int) -> a
    378:386:boolean keyUp(int) -> b
    392:400:boolean keyTyped(char) -> a
    406:413:void addTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> a
    434:435:void cancelTouchFocus() -> b
    440:464:void cancelTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    469:470:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    481:481:com.badlogic.gdx.utils.Array getActors() -> d
    510:512:void clear() -> e
    516:519:void unfocusAll() -> f
    523:525:void unfocus(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    580:580:float getWidth() -> g
    586:586:float getHeight() -> h
    618:618:com.badlogic.gdx.scenes.scene2d.Group getRoot() -> i
    627:629:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> b
    635:638:com.badlogic.gdx.math.Vector2 screenToStageCoordinates(com.badlogic.gdx.math.Vector2) -> a
    658:659:void dispose() -> c
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus -> com.badlogic.gdx.d.a.i:
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> a
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> b
    com.badlogic.gdx.scenes.scene2d.Actor target -> c
    int pointer -> d
    int button -> e
    669:671:void reset() -> b
com.badlogic.gdx.scenes.scene2d.Touchable -> com.badlogic.gdx.d.a.j:
    com.badlogic.gdx.scenes.scene2d.Touchable enabled -> a
    com.badlogic.gdx.scenes.scene2d.Touchable disabled -> b
    com.badlogic.gdx.scenes.scene2d.Touchable childrenOnly -> c
    com.badlogic.gdx.scenes.scene2d.Touchable[] $VALUES -> d
    6:6:com.badlogic.gdx.scenes.scene2d.Touchable[] values() -> values
    6:6:com.badlogic.gdx.scenes.scene2d.Touchable valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.actions.Actions -> com.badlogic.gdx.d.a.a.a:
    32:35:com.badlogic.gdx.scenes.scene2d.Action action(java.lang.Class) -> a
    47:47:com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float) -> a
    55:59:com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> a
    68:68:com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float) -> a
    72:76:com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> b
    115:115:com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float) -> b
    119:119:com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float) -> b
    123:127:com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> c
    153:153:com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float) -> c
    157:161:com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float,com.badlogic.gdx.math.Interpolation) -> a
    183:183:com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color) -> a
    188:188:com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float) -> a
    193:197:com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float,com.badlogic.gdx.math.Interpolation) -> a
    212:216:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float,com.badlogic.gdx.math.Interpolation) -> b
    221:221:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float) -> a
    235:235:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float) -> b
    262:264:com.badlogic.gdx.scenes.scene2d.actions.TouchableAction touchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> a
    268:268:com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor() -> a
    278:280:com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float) -> c
    297:300:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    304:308:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    312:317:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    321:327:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    331:334:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action[]) -> a
    400:403:com.badlogic.gdx.scenes.scene2d.actions.RepeatAction forever(com.badlogic.gdx.scenes.scene2d.Action) -> a
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction -> com.badlogic.gdx.d.a.a.b:
    float start -> b
    float end -> c
    com.badlogic.gdx.graphics.Color color -> d
    30:32:void begin() -> c
    35:36:void update(float) -> b
    39:41:void reset() -> b
    58:59:void setAlpha(float) -> c
com.badlogic.gdx.scenes.scene2d.actions.ColorAction -> com.badlogic.gdx.d.a.a.c:
    float startR -> b
    float startG -> c
    float startB -> d
    float startA -> e
    com.badlogic.gdx.graphics.Color color -> f
    com.badlogic.gdx.graphics.Color end -> g
    31:36:void begin() -> c
    39:44:void update(float) -> b
    47:49:void reset() -> b
    67:68:void setEndColor(com.badlogic.gdx.graphics.Color) -> a
com.badlogic.gdx.scenes.scene2d.actions.DelayAction -> com.badlogic.gdx.d.a.a.d:
    float duration -> c
    float time -> d
    25:31:boolean act(float) -> a
    40:42:void restart() -> a
    60:61:void setDuration(float) -> b
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction -> com.badlogic.gdx.d.a.a.e:
    com.badlogic.gdx.scenes.scene2d.Action action -> b
    29:30:void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    37:38:void restart() -> a
    41:43:void reset() -> b
    46:48:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    51:51:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction -> com.badlogic.gdx.d.a.a.f:
    float amountX -> b
    float amountY -> c
    25:26:void updateRelative(float) -> c
    29:31:void setAmount(float,float) -> a
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction -> com.badlogic.gdx.d.a.a.g:
    float startX -> b
    float startY -> c
    float endX -> d
    float endY -> e
    26:28:void begin() -> c
    31:32:void update(float) -> b
    35:37:void setPosition(float,float) -> a
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction -> com.badlogic.gdx.d.a.a.h:
    com.badlogic.gdx.utils.Array actions -> b
    boolean complete -> c
    30:35:boolean act(float) -> a
    39:43:void restart() -> a
    46:48:void reset() -> b
    51:53:void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    56:60:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    67:76:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction -> com.badlogic.gdx.d.a.a.i:
    float lastPercent -> b
    25:26:void begin() -> c
    29:31:void update(float) -> b
    void updateRelative(float) -> c
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction -> com.badlogic.gdx.d.a.a.j:
    com.badlogic.gdx.scenes.scene2d.Actor removeActor -> b
    boolean removed -> c
    29:33:boolean act(float) -> a
    37:38:void restart() -> a
    41:43:void reset() -> b
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction -> com.badlogic.gdx.d.a.a.k:
    int repeatCount -> c
    int executedCount -> d
    boolean finished -> e
    28:34:boolean act(float) -> a
    43:46:void restart() -> a
    50:51:void setCount(int) -> a
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction -> com.badlogic.gdx.d.a.a.l:
    float start -> b
    float end -> c
    25:26:void begin() -> c
    29:30:void update(float) -> b
    37:38:void setRotation(float) -> c
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction -> com.badlogic.gdx.d.a.a.m:
    float startX -> b
    float startY -> c
    float endX -> d
    float endY -> e
    26:28:void begin() -> c
    31:32:void update(float) -> b
    35:37:void setScale(float,float) -> a
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction -> com.badlogic.gdx.d.a.a.n:
    int index -> c
    25:30:boolean act(float) -> a
    34:36:void restart() -> a
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction -> com.badlogic.gdx.d.a.a.o:
    float duration -> b
    float time -> c
    com.badlogic.gdx.math.Interpolation interpolation -> d
    boolean reverse -> e
    boolean complete -> f
    42:55:boolean act(float) -> a
    61:61:void begin() -> c
    65:65:void end() -> d
    void update(float) -> b
    78:80:void restart() -> a
    83:86:void reset() -> b
    104:105:void setDuration(float) -> d
    112:113:void setInterpolation(com.badlogic.gdx.math.Interpolation) -> a
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction -> com.badlogic.gdx.d.a.a.p:
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> b
    29:30:boolean act(float) -> a
    38:39:void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> a
com.badlogic.gdx.scenes.scene2d.ui.Image -> com.badlogic.gdx.d.a.b.a:
    com.badlogic.gdx.utils.Scaling scaling -> a
    int align -> b
    float imageX -> c
    float imageY -> d
    float imageWidth -> e
    float imageHeight -> f
    com.badlogic.gdx.scenes.scene2d.utils.Drawable drawable -> g
    90:116:void layout() -> q
    119:142:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    145:152:void setDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> a
    176:177:float getPrefWidth() -> r
    181:182:float getPrefHeight() -> s
com.badlogic.gdx.scenes.scene2d.ui.Widget -> com.badlogic.gdx.d.a.b.b:
    boolean needsLayout -> a
    boolean fillParent -> b
    boolean layoutEnabled -> c
    49:49:float getPrefWidth() -> r
    53:53:float getPrefHeight() -> s
    70:93:void validate() -> t
    101:102:void invalidate() -> u
    105:109:void invalidateHierarchy() -> v
    128:129:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    132:132:void layout() -> q
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable -> com.badlogic.gdx.d.a.c.a:
    float minWidth -> a
    float minHeight -> b
    40:40:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    75:75:float getMinWidth() -> a
    79:80:void setMinWidth(float) -> a
    83:83:float getMinHeight() -> b
    87:88:void setMinHeight(float) -> b
com.badlogic.gdx.scenes.scene2d.utils.Drawable -> com.badlogic.gdx.d.a.c.b:
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    float getMinWidth() -> a
    float getMinHeight() -> b
com.badlogic.gdx.scenes.scene2d.utils.Layout -> com.badlogic.gdx.d.a.c.c:
    void invalidateHierarchy() -> v
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable -> com.badlogic.gdx.d.a.c.d:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> a
    41:42:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    45:48:void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    51:51:com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> c
com.badlogic.gdx.utils.Array -> com.badlogic.gdx.utils.a:
    java.lang.Object[] items -> a
    int size -> b
    boolean ordered -> c
    com.badlogic.gdx.utils.Array$ArrayIterator iterator -> d
    97:100:void add(java.lang.Object) -> a
    103:104:void addAll(com.badlogic.gdx.utils.Array) -> a
    107:110:void addAll(com.badlogic.gdx.utils.Array,int,int) -> a
    117:122:void addAll(java.lang.Object[],int,int) -> a
    125:126:java.lang.Object get(int) -> a
    169:177:int indexOf(java.lang.Object,boolean) -> a
    193:209:boolean removeValue(java.lang.Object,boolean) -> b
    214:223:java.lang.Object removeIndex(int) -> b
    228:231:java.lang.Object pop() -> a
    245:249:void clear() -> b
    268:272:java.lang.Object[] resize(int) -> c
    307:311:java.util.Iterator iterator() -> iterator
    340:352:boolean equals(java.lang.Object) -> equals
    356:366:java.lang.String toString() -> toString
com.badlogic.gdx.utils.Array$ArrayIterator -> com.badlogic.gdx.utils.b:
    com.badlogic.gdx.utils.Array array -> b
    int index -> a
    390:390:boolean hasNext() -> hasNext
    394:395:java.lang.Object next() -> next
    399:401:void remove() -> remove
com.badlogic.gdx.utils.BufferUtils -> com.badlogic.gdx.utils.BufferUtils:
    com.badlogic.gdx.utils.Array unsafeBuffers -> a
    int allocatedUnsafe -> b
    47:53:void copy(float[],java.nio.Buffer,int,int) -> a
    226:228:java.nio.FloatBuffer newFloatBuffer(int) -> a
    238:240:java.nio.ByteBuffer newByteBuffer(int) -> b
    256:258:java.nio.IntBuffer newIntBuffer(int) -> c
    275:282:void disposeUnsafeByteBuffer(java.nio.ByteBuffer) -> a
    288:294:java.nio.ByteBuffer newUnsafeByteBuffer(int) -> d
    void freeMemory(java.nio.ByteBuffer) -> freeMemory
    java.nio.ByteBuffer newDisposableByteBuffer(int) -> newDisposableByteBuffer
    void copyJni(float[],java.nio.Buffer,int,int) -> copyJni
com.badlogic.gdx.utils.DelayedRemovalArray -> com.badlogic.gdx.utils.c:
    boolean iterating -> d
    com.badlogic.gdx.utils.IntArray remove -> e
    65:66:void begin() -> c
    69:72:void end() -> d
    75:84:void remove(int) -> d
    87:93:boolean removeValue(java.lang.Object,boolean) -> b
    97:101:java.lang.Object removeIndex(int) -> b
    120:121:java.lang.Object pop() -> a
    125:127:void clear() -> b
com.badlogic.gdx.utils.Disposable -> com.badlogic.gdx.utils.d:
    void dispose() -> c
com.badlogic.gdx.utils.GdxNativesLoader -> com.badlogic.gdx.utils.e:
    boolean disableNativesLoading -> a
    boolean nativesLoaded -> h
    boolean isWindows -> b
    boolean isLinux -> c
    boolean isMac -> d
    boolean is64Bit -> e
    java.io.File nativesDir -> f
    java.lang.String path -> g
    40:56:java.lang.String crc(java.lang.String) -> a
    60:62:boolean loadLibrary(java.lang.String,java.lang.String) -> a
    66:84:java.lang.String extractLibrary(java.lang.String,java.lang.String) -> b
    89:122:void load() -> a
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.f:
com.badlogic.gdx.utils.IntArray -> com.badlogic.gdx.utils.g:
    int[] items -> a
    int size -> b
    boolean ordered -> c
    76:79:void add(int) -> a
    104:105:int get(int) -> b
    114:122:void insert(int,int) -> a
    181:181:int pop() -> a
    214:218:int[] resize(int) -> c
    262:269:boolean equals(java.lang.Object) -> equals
    273:283:java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntMap -> com.badlogic.gdx.utils.h:
    int size -> a
    int[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    java.lang.Object zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> h
    int hashShift -> i
    int mask -> j
    int threshold -> k
    int stashCapacity -> l
    int pushIterations -> m
    87:156:java.lang.Object put(int,java.lang.Object) -> a
    166:201:void putResize(int,java.lang.Object) -> b
    204:271:void push(int,java.lang.Object,int,int,int,int,int,int) -> a
    274:286:void putStash(int,java.lang.Object) -> c
    322:358:java.lang.Object remove(int) -> a
    362:371:java.lang.Object removeStash(int) -> b
    376:384:void removeStashIndex(int) -> c
    473:494:void resize(int) -> d
    497:498:int hash2(int) -> e
    502:503:int hash3(int) -> f
    507:530:java.lang.String toString() -> toString
com.badlogic.gdx.utils.Logger -> com.badlogic.gdx.utils.i:
    java.lang.String tag -> a
    int level -> b
    45:46:void debug(java.lang.String) -> a
    53:54:void info(java.lang.String) -> b
    65:66:void error(java.lang.String,java.lang.Throwable) -> a
    76:76:int getLevel() -> a
com.badlogic.gdx.utils.NumberUtils -> com.badlogic.gdx.utils.j:
    21:21:int floatToIntBits(float) -> a
    35:35:float intToFloatColor(int) -> a
    43:43:long doubleToLongBits(double) -> a
    47:47:double longBitsToDouble(long) -> a
com.badlogic.gdx.utils.ObjectIntMap -> com.badlogic.gdx.utils.k:
    int size -> a
    java.lang.Object[] keyTable -> b
    int[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> f
    int hashShift -> g
    int mask -> h
    int threshold -> i
    int stashCapacity -> j
    int pushIterations -> k
    84:141:void put(java.lang.Object,int) -> a
    151:180:void putResize(java.lang.Object,int) -> c
    183:250:void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    253:265:void putStash(java.lang.Object,int) -> d
    269:278:int get(java.lang.Object,int) -> b
    282:285:int getStash(java.lang.Object,int) -> e
    370:377:void clear() -> a
    425:446:void resize(int) -> a
    449:450:int hash2(int) -> b
    454:455:int hash3(int) -> c
    459:482:java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap -> com.badlogic.gdx.utils.l:
    int size -> a
    java.lang.Object[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> f
    int hashShift -> g
    int mask -> h
    int threshold -> i
    int stashCapacity -> j
    int pushIterations -> k
    com.badlogic.gdx.utils.ObjectMap$Keys keys -> l
    85:86:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    90:150:java.lang.Object put_internal(java.lang.Object,java.lang.Object) -> b
    161:190:void putResize(java.lang.Object,java.lang.Object) -> c
    193:260:void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    263:275:void putStash(java.lang.Object,java.lang.Object) -> d
    278:287:java.lang.Object get(java.lang.Object) -> a
    291:294:java.lang.Object getStash(java.lang.Object) -> e
    298:326:java.lang.Object remove(java.lang.Object) -> b
    330:339:java.lang.Object removeStash(java.lang.Object) -> c
    344:352:void removeStashIndex(int) -> a
    355:363:void clear() -> a
    386:395:boolean containsKey(java.lang.Object) -> d
    399:402:boolean containsKeyStash(java.lang.Object) -> f
    433:454:void resize(int) -> b
    457:458:int hash2(int) -> c
    462:463:int hash3(int) -> d
    467:490:java.lang.String toString() -> toString
    516:520:com.badlogic.gdx.utils.ObjectMap$Keys keys() -> b
com.badlogic.gdx.utils.ObjectMap$Keys -> com.badlogic.gdx.utils.m:
    641:641:boolean hasNext() -> hasNext
    645:648:java.lang.Object next() -> next
    652:652:java.util.Iterator iterator() -> iterator
    657:660:com.badlogic.gdx.utils.Array toArray() -> a
    635:635:void remove() -> remove
    635:635:void reset() -> b
com.badlogic.gdx.utils.ObjectMap$MapIterator -> com.badlogic.gdx.utils.n:
    boolean hasNext -> a
    com.badlogic.gdx.utils.ObjectMap map -> b
    int nextIndex -> c
    int currentIndex -> d
    544:547:void reset() -> b
    550:558:void advance() -> c
    561:570:void remove() -> remove
com.badlogic.gdx.utils.Pool -> com.badlogic.gdx.utils.o:
    int max -> b
    com.badlogic.gdx.utils.Array freeObjects -> a
    java.lang.Object newObject() -> b
    47:47:java.lang.Object obtain() -> c
    53:56:void free(java.lang.Object) -> a
com.badlogic.gdx.utils.Pool$Poolable -> com.badlogic.gdx.utils.p:
    void reset() -> b
com.badlogic.gdx.utils.Pools -> com.badlogic.gdx.utils.q:
    com.badlogic.gdx.utils.ObjectMap typePools -> a
    27:32:com.badlogic.gdx.utils.Pool get(java.lang.Class) -> a
    37:37:java.lang.Object obtain(java.lang.Class) -> b
    42:47:void free(java.lang.Object) -> a
com.badlogic.gdx.utils.ReflectionPool -> com.badlogic.gdx.utils.r:
    java.lang.Class type -> a
    43:59:java.lang.Object newObject() -> b
com.badlogic.gdx.utils.Scaling -> com.badlogic.gdx.utils.s:
    com.badlogic.gdx.utils.Scaling fit -> a
    com.badlogic.gdx.utils.Scaling fill -> b
    com.badlogic.gdx.utils.Scaling fillX -> c
    com.badlogic.gdx.utils.Scaling fillY -> d
    com.badlogic.gdx.utils.Scaling stretch -> e
    com.badlogic.gdx.utils.Scaling stretchX -> f
    com.badlogic.gdx.utils.Scaling stretchY -> g
    com.badlogic.gdx.utils.Scaling none -> h
    com.badlogic.gdx.math.Vector2 temp -> i
    com.badlogic.gdx.utils.Scaling[] $VALUES -> j
    23:23:com.badlogic.gdx.utils.Scaling[] values() -> values
    23:23:com.badlogic.gdx.utils.Scaling valueOf(java.lang.String) -> valueOf
    52:102:com.badlogic.gdx.math.Vector2 apply(float,float,float,float) -> a
com.badlogic.gdx.utils.Scaling$1 -> com.badlogic.gdx.utils.t:
    int[] $SwitchMap$com$badlogic$gdx$utils$Scaling -> a
com.badlogic.gdx.utils.SnapshotArray -> com.badlogic.gdx.utils.u:
    java.lang.Object[] snapshot -> d
    java.lang.Object[] recycled -> e
    int snapshots -> f
    77:79:java.lang.Object[] begin() -> c
    84:93:void end() -> d
    96:104:void modified() -> e
    122:123:boolean removeValue(java.lang.Object,boolean) -> b
    127:128:java.lang.Object removeIndex(int) -> b
    132:133:java.lang.Object pop() -> a
    137:139:void clear() -> b
com.badlogic.gdx.utils.StringBuilder -> com.badlogic.gdx.utils.v:
    char[] chars -> a
    int length -> b
    86:90:void enlargeBuffer(int) -> b
    93:101:void appendNull() -> a
    130:134:void append0(char) -> a
    137:148:void append0(java.lang.String) -> a
    151:159:void append0(java.lang.CharSequence,int,int) -> a
    176:179:char charAt(int) -> charAt
    307:307:int length() -> length
    468:476:java.lang.String substring(int,int) -> a
    484:485:java.lang.String toString() -> toString
    497:497:java.lang.CharSequence subSequence(int,int) -> subSequence
    702:703:com.badlogic.gdx.utils.StringBuilder append(char) -> b
    713:714:com.badlogic.gdx.utils.StringBuilder append(int) -> a
    757:762:com.badlogic.gdx.utils.StringBuilder append(java.lang.Object) -> a
    770:771:com.badlogic.gdx.utils.StringBuilder append(java.lang.String) -> b
    805:810:com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence) -> a
    831:832:com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence,int,int) -> b
    1063:1067:int hashCode() -> hashCode
    1071:1083:boolean equals(java.lang.Object) -> equals
    27:27:java.lang.Appendable append(char) -> append
    27:27:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    27:27:java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.utils.TimeUtils -> com.badlogic.gdx.utils.w:
    24:24:long nanoTime() -> a
com.voyagegames.monkeymatch.IApplicationProvider -> com.voyagegames.monkeymatch.a:
    java.io.InputStream openAsset(java.lang.String) -> a
    com.badlogic.gdx.audio.Music openMusic(java.lang.String) -> b
    com.badlogic.gdx.audio.Sound openSound(java.lang.String) -> c
    void finish() -> finish
com.voyagegames.monkeymatch.IDataProvider -> com.voyagegames.monkeymatch.b:
    int personalBest() -> a
    void setPersonalBest(int) -> a
com.voyagegames.monkeymatch.ILogger -> com.voyagegames.monkeymatch.c:
    void log(java.lang.Exception) -> a
com.voyagegames.monkeymatch.ScreenManager -> com.voyagegames.monkeymatch.d:
    com.voyagegames.monkeymatch.IApplicationProvider mApp -> a
    com.voyagegames.monkeymatch.ILogger mLogger -> b
    com.voyagegames.monkeymatch.IDataProvider mDataProvider -> c
    com.badlogic.gdx.graphics.FPSLogger mFPSLogger -> d
    com.voyagegames.monkeymatch.helpers.TextureManager mTextures -> e
    com.voyagegames.monkeymatch.helpers.AudioManager mAudio -> f
    com.badlogic.gdx.Screen mScreen -> g
    int mLevelCount -> h
    int mTotalScore -> i
    44:48:void create() -> a
    52:58:void render() -> b
    62:70:void dispose() -> e
    74:80:void pause() -> c
    84:90:void resize(int,int) -> a
    94:99:void resume() -> d
    103:160:void levelComplete(int) -> a
    165:185:void showOptions() -> g
    194:201:void exitSignaled() -> h
com.voyagegames.monkeymatch.android.DataProvider -> com.voyagegames.monkeymatch.android.a:
    com.voyagegames.monkeymatch.android.SQLiteScoreHelper mHelper -> a
    android.database.sqlite.SQLiteDatabase mDB -> b
    25:31:int personalBest() -> a
    36:39:void setPersonalBest(int) -> a
    42:77:java.util.List select() -> b
com.voyagegames.monkeymatch.android.Logger -> com.voyagegames.monkeymatch.android.b:
    16:17:void log(java.lang.Exception) -> a
com.voyagegames.monkeymatch.android.MainActivity -> com.voyagegames.monkeymatch.android.MainActivity:
    com.voyagegames.monkeymatch.ScreenManager mManager -> m
    23:30:void onCreate(android.os.Bundle) -> onCreate
    34:42:void finish() -> finish
    46:54:void onDestroy() -> onDestroy
    59:62:java.io.InputStream openAsset(java.lang.String) -> a
    68:68:com.badlogic.gdx.audio.Music openMusic(java.lang.String) -> b
    73:73:com.badlogic.gdx.audio.Sound openSound(java.lang.String) -> c
com.voyagegames.monkeymatch.android.SQLiteScoreHelper -> com.voyagegames.monkeymatch.android.c:
    java.lang.String TAG -> a
    25:26:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    30:33:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.voyagegames.monkeymatch.helpers.AudioManager -> com.voyagegames.monkeymatch.a.a:
    com.voyagegames.monkeymatch.IApplicationProvider mApp -> a
    boolean mEnabled -> b
    float mVolume -> c
    com.voyagegames.monkeymatch.helpers.AudioManager$MusicSelection mMusic -> d
    com.badlogic.gdx.audio.Music mJungle -> e
    com.badlogic.gdx.audio.Music mWin -> f
    com.badlogic.gdx.audio.Sound mSuccess -> g
    com.badlogic.gdx.audio.Sound mFailure -> h
    com.badlogic.gdx.audio.Sound mApplause -> i
    int[] $SWITCH_TABLE$com$voyagegames$monkeymatch$helpers$AudioManager$MusicSelection -> j
    int[] $SWITCH_TABLE$com$voyagegames$monkeymatch$helpers$AudioManager$SoundSelection -> k
    40:40:boolean enabled() -> a
    65:84:void initialize() -> b
    87:111:void dispose() -> c
    114:128:boolean isMusicPlaying() -> d
    133:145:void stopMusic() -> e
    148:173:void playMusic(com.voyagegames.monkeymatch.helpers.AudioManager$MusicSelection) -> a
    176:197:void playSound(com.voyagegames.monkeymatch.helpers.AudioManager$SoundSelection) -> a
    7:7:int[] $SWITCH_TABLE$com$voyagegames$monkeymatch$helpers$AudioManager$MusicSelection() -> f
    7:7:int[] $SWITCH_TABLE$com$voyagegames$monkeymatch$helpers$AudioManager$SoundSelection() -> g
com.voyagegames.monkeymatch.helpers.AudioManager$MusicSelection -> com.voyagegames.monkeymatch.a.b:
    com.voyagegames.monkeymatch.helpers.AudioManager$MusicSelection NONE -> a
    com.voyagegames.monkeymatch.helpers.AudioManager$MusicSelection JUNGLE -> b
    com.voyagegames.monkeymatch.helpers.AudioManager$MusicSelection WIN -> c
    com.voyagegames.monkeymatch.helpers.AudioManager$MusicSelection[] ENUM$VALUES -> d
    1:1:com.voyagegames.monkeymatch.helpers.AudioManager$MusicSelection[] values() -> values
    1:1:com.voyagegames.monkeymatch.helpers.AudioManager$MusicSelection valueOf(java.lang.String) -> valueOf
com.voyagegames.monkeymatch.helpers.AudioManager$SoundSelection -> com.voyagegames.monkeymatch.a.c:
    com.voyagegames.monkeymatch.helpers.AudioManager$SoundSelection SUCCESS -> a
    com.voyagegames.monkeymatch.helpers.AudioManager$SoundSelection FAILURE -> b
    com.voyagegames.monkeymatch.helpers.AudioManager$SoundSelection APPLAUSE -> c
    com.voyagegames.monkeymatch.helpers.AudioManager$SoundSelection[] ENUM$VALUES -> d
    1:1:com.voyagegames.monkeymatch.helpers.AudioManager$SoundSelection[] values() -> values
    1:1:com.voyagegames.monkeymatch.helpers.AudioManager$SoundSelection valueOf(java.lang.String) -> valueOf
com.voyagegames.monkeymatch.helpers.BundledTexture -> com.voyagegames.monkeymatch.a.d:
    com.badlogic.gdx.graphics.Texture texture -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> b
    25:25:float getWidth() -> a
    29:29:float getHeight() -> b
com.voyagegames.monkeymatch.helpers.GridBox -> com.voyagegames.monkeymatch.a.e:
    int offset -> a
    com.badlogic.gdx.scenes.scene2d.Actor target -> b
    com.badlogic.gdx.scenes.scene2d.Actor box -> c
com.voyagegames.monkeymatch.helpers.GridElement -> com.voyagegames.monkeymatch.a.f:
    java.lang.String asset -> a
    float x -> b
    float y -> c
com.voyagegames.monkeymatch.helpers.LevelLoader -> com.voyagegames.monkeymatch.a.g:
    java.lang.String background -> a
    float tokenScale -> b
    float spawnTime -> c
    int numBonuses -> d
    int numRows -> e
    int numCols -> f
    float tokenX -> g
    float tokenY -> h
    int gridWidth -> i
    int gridHeight -> j
    java.util.List tokens -> k
    java.util.List tokenWeights -> l
    java.util.List tokenValues -> m
    java.util.List grids -> n
    77:78:java.lang.String getTagValue(java.lang.String,org.w3c.dom.Element) -> a
com.voyagegames.monkeymatch.helpers.TextureManager -> com.voyagegames.monkeymatch.a.h:
    com.voyagegames.monkeymatch.helpers.BundledTexture[] digits -> a
    com.voyagegames.monkeymatch.helpers.BundledTexture[] grids -> b
    com.voyagegames.monkeymatch.helpers.BundledTexture[] tokens -> c
    com.voyagegames.monkeymatch.helpers.BundledTexture[] goldTokens -> d
    com.voyagegames.monkeymatch.helpers.BundledTexture[] plus -> e
    com.voyagegames.monkeymatch.helpers.BundledTexture background -> f
    com.voyagegames.monkeymatch.helpers.BundledTexture border -> g
    com.voyagegames.monkeymatch.helpers.BundledTexture highlight -> h
    com.voyagegames.monkeymatch.helpers.BundledTexture bonus -> i
    com.voyagegames.monkeymatch.helpers.BundledTexture points -> j
    com.voyagegames.monkeymatch.helpers.BundledTexture trophy -> k
    com.voyagegames.monkeymatch.helpers.BundledTexture start -> l
    com.voyagegames.monkeymatch.helpers.BundledTexture title -> m
    com.voyagegames.monkeymatch.helpers.BundledTexture logo -> n
    com.voyagegames.monkeymatch.helpers.BundledTexture options -> o
    com.voyagegames.monkeymatch.helpers.BundledTexture music -> p
    com.voyagegames.monkeymatch.helpers.BundledTexture voyageGames -> q
    com.voyagegames.monkeymatch.helpers.BundledTexture soundJay -> r
    com.voyagegames.monkeymatch.helpers.BundledTexture gridBackground -> s
    38:69:void initialize() -> a
    72:103:void disposeDynamic() -> b
    106:129:void disposeAll() -> c
com.voyagegames.monkeymatch.helpers.Token -> com.voyagegames.monkeymatch.a.i:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> a
    int type -> b
    com.badlogic.gdx.math.Vector2 initialPosition -> c
    float weight -> d
    int value -> e
com.voyagegames.monkeymatch.helpers.TokenDrag -> com.voyagegames.monkeymatch.a.j:
    com.voyagegames.monkeymatch.helpers.Token token -> a
    float mX -> b
    float mY -> c
    18:20:void update(float,float) -> a
    23:23:float x() -> a
    27:27:float y() -> b
com.voyagegames.monkeymatch.screens.EndGameScreen -> com.voyagegames.monkeymatch.b.a:
    com.badlogic.gdx.scenes.scene2d.Stage mStage -> a
    com.voyagegames.monkeymatch.screens.LevelCallback mCallback -> b
    int mScore -> c
    int mPersonalBest -> d
    com.voyagegames.monkeymatch.helpers.TextureManager mTextures -> e
    com.voyagegames.monkeymatch.helpers.AudioManager mAudio -> f
    com.badlogic.gdx.scenes.scene2d.Actor mBackgroundActor -> g
    com.badlogic.gdx.scenes.scene2d.Actor mButtonActor -> h
    com.badlogic.gdx.scenes.scene2d.Actor mOptionsActor -> i
    boolean mIsTouched -> j
    float mScale -> k
    61:65:void dispose() -> e
    69:79:void render(float) -> a
    83:84:void show() -> a
    88:146:void resize(int,int) -> a
    150:158:boolean touchDown(int,int,int,int) -> a
    163:181:boolean touchUp(int,int,int,int) -> b
    186:194:boolean keyDown(int) -> a
    198:206:void setupActor(com.badlogic.gdx.scenes.scene2d.Actor,float,float,float) -> a
    209:213:void addStartButtonActions() -> f
    216:261:void setPersonalBestScore(float) -> b
    264:304:void setCurrentScore(float) -> c
    314:314:void resume() -> d
    320:320:void pause() -> c
    326:326:void hide() -> b
    331:331:boolean keyTyped(char) -> a
    337:337:boolean keyUp(int) -> b
    355:355:boolean touchDragged(int,int,int) -> a
com.voyagegames.monkeymatch.screens.LevelCallback -> com.voyagegames.monkeymatch.b.b:
    void levelComplete(int) -> a
    void showOptions() -> g
    void exitSignaled() -> h
com.voyagegames.monkeymatch.screens.LevelScreen -> com.voyagegames.monkeymatch.b.c:
    java.util.Random mRandomGenerator -> a
    com.badlogic.gdx.scenes.scene2d.Stage mStage -> b
    com.voyagegames.monkeymatch.helpers.LevelLoader mLevel -> c
    com.voyagegames.monkeymatch.screens.LevelCallback mCallback -> d
    com.voyagegames.monkeymatch.helpers.TextureManager mTextures -> e
    com.voyagegames.monkeymatch.helpers.AudioManager mAudio -> f
    boolean[] mGridInUse -> g
    boolean[] mGridCollected -> h
    com.badlogic.gdx.scenes.scene2d.Actor[] mGridImages -> i
    com.badlogic.gdx.scenes.scene2d.Actor[] mHighlights -> j
    int mGridElements -> k
    java.util.List mTokens -> l
    java.util.List mTargets -> m
    java.util.List mGridBoxes -> n
    java.util.List mBonuses -> o
    java.util.List mScoreDigits -> p
    boolean mVictory -> q
    boolean mVictoryDone -> r
    float mScale -> s
    float mTargetSpawnTime -> t
    float mLastTargetTime -> u
    float mElapsedTime -> v
    com.voyagegames.monkeymatch.helpers.TokenDrag mDrag -> w
    int mPointsScore -> x
    com.badlogic.gdx.scenes.scene2d.Actor mPointsActor -> y
    com.badlogic.gdx.scenes.scene2d.Actor mGridBackgroundActor -> z
    102:114:void show() -> a
    118:130:void render(float) -> a
    134:257:void resize(int,int) -> a
    262:266:void dispose() -> e
    270:300:boolean touchDown(int,int,int,int) -> a
    305:319:boolean touchDragged(int,int,int) -> a
    324:349:boolean touchUp(int,int,int,int) -> b
    354:362:boolean keyDown(int) -> a
    366:374:void setupActor(com.badlogic.gdx.scenes.scene2d.Actor,float,float,float) -> a
    377:382:void addHighlightActions(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    385:409:void resetToken(com.voyagegames.monkeymatch.helpers.Token) -> a
    412:440:void updateScore() -> f
    444:481:void spawnTarget(int,int) -> b
    484:505:void update(float) -> b
    508:600:void performVictory() -> g
    603:639:void checkForNewSpawn() -> h
    642:653:void removeBonus() -> i
    656:704:void collectTarget(com.badlogic.gdx.scenes.scene2d.Actor,com.voyagegames.monkeymatch.helpers.Token) -> a
    707:714:void addScore(int) -> c
    717:719:float getDistSquared(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> a
    723:761:com.badlogic.gdx.scenes.scene2d.Actor getNearestToken(float,float) -> a
    765:801:com.badlogic.gdx.scenes.scene2d.Actor getNearestHit(com.voyagegames.monkeymatch.helpers.Token) -> b
    812:812:void resume() -> d
    818:818:void pause() -> c
    824:824:void hide() -> b
    829:829:boolean keyTyped(char) -> a
    835:835:boolean keyUp(int) -> b
    63:63:java.util.List access$0(com.voyagegames.monkeymatch.screens.LevelScreen) -> a
    64:64:java.util.List access$1(com.voyagegames.monkeymatch.screens.LevelScreen) -> b
    56:56:boolean[] access$2(com.voyagegames.monkeymatch.screens.LevelScreen) -> c
    51:51:com.voyagegames.monkeymatch.helpers.LevelLoader access$3(com.voyagegames.monkeymatch.screens.LevelScreen) -> d
    70:70:float access$4(com.voyagegames.monkeymatch.screens.LevelScreen) -> e
    53:53:com.voyagegames.monkeymatch.helpers.TextureManager access$5(com.voyagegames.monkeymatch.screens.LevelScreen) -> f
    50:50:com.badlogic.gdx.scenes.scene2d.Stage access$6(com.voyagegames.monkeymatch.screens.LevelScreen) -> g
    706:706:void access$7(com.voyagegames.monkeymatch.screens.LevelScreen,int) -> a
    54:54:com.voyagegames.monkeymatch.helpers.AudioManager access$8(com.voyagegames.monkeymatch.screens.LevelScreen) -> h
    52:52:com.voyagegames.monkeymatch.screens.LevelCallback access$9(com.voyagegames.monkeymatch.screens.LevelScreen) -> i
    69:69:void access$10(com.voyagegames.monkeymatch.screens.LevelScreen,boolean) -> a
    75:75:int access$11(com.voyagegames.monkeymatch.screens.LevelScreen) -> j
com.voyagegames.monkeymatch.screens.LevelScreen$1 -> com.voyagegames.monkeymatch.b.d:
    com.voyagegames.monkeymatch.screens.LevelScreen this$0 -> b
    com.voyagegames.monkeymatch.helpers.Token val$token -> c
    com.voyagegames.monkeymatch.helpers.GridBox val$gridBox -> d
    int val$gridIndex -> e
    473:476:boolean act(float) -> a
com.voyagegames.monkeymatch.screens.LevelScreen$2 -> com.voyagegames.monkeymatch.b.e:
    com.voyagegames.monkeymatch.screens.LevelScreen this$0 -> b
    com.badlogic.gdx.scenes.scene2d.Actor val$bonus -> c
    518:531:boolean act(float) -> a
com.voyagegames.monkeymatch.screens.LevelScreen$3 -> com.voyagegames.monkeymatch.b.f:
    com.voyagegames.monkeymatch.screens.LevelScreen this$0 -> b
    555:556:boolean act(float) -> a
com.voyagegames.monkeymatch.screens.LevelScreen$4 -> com.voyagegames.monkeymatch.b.g:
    com.voyagegames.monkeymatch.screens.LevelScreen this$0 -> b
    565:576:boolean act(float) -> a
com.voyagegames.monkeymatch.screens.LevelScreen$5 -> com.voyagegames.monkeymatch.b.h:
    com.voyagegames.monkeymatch.screens.LevelScreen this$0 -> b
    585:591:boolean act(float) -> a
com.voyagegames.monkeymatch.screens.OptionsScreen -> com.voyagegames.monkeymatch.b.i:
    com.badlogic.gdx.scenes.scene2d.Stage mStage -> a
    com.voyagegames.monkeymatch.screens.LevelCallback mCallback -> b
    com.voyagegames.monkeymatch.helpers.TextureManager mTextures -> c
    com.voyagegames.monkeymatch.helpers.AudioManager mAudio -> d
    com.badlogic.gdx.scenes.scene2d.Actor mBackgroundActor -> e
    com.badlogic.gdx.scenes.scene2d.Actor mButtonActor -> f
    boolean mIsTouched -> g
    float mScale -> h
    51:55:void dispose() -> e
    59:69:void render(float) -> a
    73:74:void show() -> a
    78:152:void resize(int,int) -> a
    156:164:boolean touchDown(int,int,int,int) -> a
    169:184:boolean touchUp(int,int,int,int) -> b
    189:197:boolean keyDown(int) -> a
    201:209:void setupActor(com.badlogic.gdx.scenes.scene2d.Actor,float,float,float) -> a
    212:216:void addStartButtonActions() -> f
    226:226:void resume() -> d
    232:232:void pause() -> c
    238:238:void hide() -> b
    243:243:boolean keyTyped(char) -> a
    249:249:boolean keyUp(int) -> b
    267:267:boolean touchDragged(int,int,int) -> a
